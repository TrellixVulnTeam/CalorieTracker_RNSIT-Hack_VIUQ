{"ast":null,"code":"import axios from 'axios';\nimport { GET_CONSUMPTION_LIST, UPDATE_CONSUMPTION_CALORIES, UPDATE_CONSUMPTION_QUANTITY, ADD_CONSUMPTION, DELETE_CONSUMPTION, CLEAR_CONSUMPTIONS, SAVE_CONSUMPTION_LIST, SET_SAVING_LOADING, SET_CONSUMPTIONS_LOADING } from './types'; // Get Consumption List\n\nexport const getConsumptionList = () => async dispatch => {\n  dispatch({\n    type: SET_CONSUMPTIONS_LOADING\n  });\n  const res = await axios.get('consumptions/list');\n  dispatch({\n    type: GET_CONSUMPTION_LIST,\n    payload: res.data\n  });\n}; // Update Consumption Quantity\n\nexport const updateConsumptionQuantity = (id, quantity) => dispatch => {\n  dispatch({\n    type: UPDATE_CONSUMPTION_QUANTITY,\n    payload: {\n      id,\n      quantity\n    }\n  });\n}; // Update Consumption Calories\n\nexport const updateConsumptionCalories = (id, calories) => dispatch => {\n  dispatch({\n    type: UPDATE_CONSUMPTION_CALORIES,\n    payload: {\n      id,\n      calories\n    }\n  });\n}; // Add Consumption\n\nexport const addConsumption = food => dispatch => {\n  dispatch({\n    type: ADD_CONSUMPTION,\n    payload: food\n  });\n}; // Delete Consumption\n\nexport const deleteConsumption = id => dispatch => {\n  dispatch({\n    type: DELETE_CONSUMPTION,\n    payload: {\n      id\n    }\n  });\n}; // Save Consumption\n\nexport const saveConsumptionList = consumptionList => async dispatch => {\n  dispatch({\n    type: SET_SAVING_LOADING\n  }); // Mapping the consumptions for the backend\n\n  const consumptions = consumptionList.map(consumption => ({\n    food: consumption._id,\n    quantity: consumption.quantity\n  }));\n  await axios.put('consumptions/list', {\n    consumptions\n  });\n  dispatch({\n    type: SAVE_CONSUMPTION_LIST\n  });\n}; // Save Consumption\n\nexport const clearConsumptionList = () => dispatch => {\n  dispatch({\n    type: CLEAR_CONSUMPTIONS\n  });\n};","map":{"version":3,"sources":["C:/Users/KYM/Desktop/calorie/client/src/actions/consumptionList.js"],"names":["axios","GET_CONSUMPTION_LIST","UPDATE_CONSUMPTION_CALORIES","UPDATE_CONSUMPTION_QUANTITY","ADD_CONSUMPTION","DELETE_CONSUMPTION","CLEAR_CONSUMPTIONS","SAVE_CONSUMPTION_LIST","SET_SAVING_LOADING","SET_CONSUMPTIONS_LOADING","getConsumptionList","dispatch","type","res","get","payload","data","updateConsumptionQuantity","id","quantity","updateConsumptionCalories","calories","addConsumption","food","deleteConsumption","saveConsumptionList","consumptionList","consumptions","map","consumption","_id","put","clearConsumptionList"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,oBADF,EAEEC,2BAFF,EAGEC,2BAHF,EAIEC,eAJF,EAKEC,kBALF,EAMEC,kBANF,EAOEC,qBAPF,EAQEC,kBARF,EASEC,wBATF,QAUO,SAVP,C,CAYA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEH;AADC,GAAD,CAAR;AAGA,QAAMI,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,mBAAV,CAAlB;AACAH,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX,oBADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,GAAD,CAAR;AAID,CATM,C,CAWP;;AACA,OAAO,MAAMC,yBAAyB,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAmBR,QAAD,IAAc;AACvEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAET,2BADC;AAEPY,IAAAA,OAAO,EAAE;AAAEG,MAAAA,EAAF;AAAMC,MAAAA;AAAN;AAFF,GAAD,CAAR;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,yBAAyB,GAAG,CAACF,EAAD,EAAKG,QAAL,KAAmBV,QAAD,IAAc;AACvEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEV,2BADC;AAEPa,IAAAA,OAAO,EAAE;AAAEG,MAAAA,EAAF;AAAMG,MAAAA;AAAN;AAFF,GAAD,CAAR;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAWZ,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER,eADC;AAEPW,IAAAA,OAAO,EAAEQ;AAFF,GAAD,CAAR;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,iBAAiB,GAAIN,EAAD,IAASP,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,kBADC;AAEPU,IAAAA,OAAO,EAAE;AAAEG,MAAAA;AAAF;AAFF,GAAD,CAAR;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMO,mBAAmB,GAAIC,eAAD,IAAqB,MAAOf,QAAP,IAAoB;AAC1EA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEJ;AADC,GAAD,CAAR,CAD0E,CAK1E;;AACA,QAAMmB,YAAY,GAAGD,eAAe,CAACE,GAAhB,CAAqBC,WAAD,KAAkB;AACzDN,IAAAA,IAAI,EAAEM,WAAW,CAACC,GADuC;AAEzDX,IAAAA,QAAQ,EAAEU,WAAW,CAACV;AAFmC,GAAlB,CAApB,CAArB;AAKA,QAAMnB,KAAK,CAAC+B,GAAN,CAAU,mBAAV,EAA+B;AAAEJ,IAAAA;AAAF,GAA/B,CAAN;AAEAhB,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL;AADC,GAAD,CAAR;AAGD,CAhBM,C,CAkBP;;AACA,OAAO,MAAMyB,oBAAoB,GAAG,MAAOrB,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;AAGD,CAJM","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n  GET_CONSUMPTION_LIST,\r\n  UPDATE_CONSUMPTION_CALORIES,\r\n  UPDATE_CONSUMPTION_QUANTITY,\r\n  ADD_CONSUMPTION,\r\n  DELETE_CONSUMPTION,\r\n  CLEAR_CONSUMPTIONS,\r\n  SAVE_CONSUMPTION_LIST,\r\n  SET_SAVING_LOADING,\r\n  SET_CONSUMPTIONS_LOADING,\r\n} from './types';\r\n\r\n// Get Consumption List\r\nexport const getConsumptionList = () => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_CONSUMPTIONS_LOADING,\r\n  });\r\n  const res = await axios.get('consumptions/list');\r\n  dispatch({\r\n    type: GET_CONSUMPTION_LIST,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\n// Update Consumption Quantity\r\nexport const updateConsumptionQuantity = (id, quantity) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_CONSUMPTION_QUANTITY,\r\n    payload: { id, quantity },\r\n  });\r\n};\r\n\r\n// Update Consumption Calories\r\nexport const updateConsumptionCalories = (id, calories) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_CONSUMPTION_CALORIES,\r\n    payload: { id, calories },\r\n  });\r\n};\r\n\r\n// Add Consumption\r\nexport const addConsumption = (food) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_CONSUMPTION,\r\n    payload: food,\r\n  });\r\n};\r\n\r\n// Delete Consumption\r\nexport const deleteConsumption = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_CONSUMPTION,\r\n    payload: { id },\r\n  });\r\n};\r\n\r\n// Save Consumption\r\nexport const saveConsumptionList = (consumptionList) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_SAVING_LOADING,\r\n  });\r\n\r\n  // Mapping the consumptions for the backend\r\n  const consumptions = consumptionList.map((consumption) => ({\r\n    food: consumption._id,\r\n    quantity: consumption.quantity,\r\n  }));\r\n\r\n  await axios.put('consumptions/list', { consumptions });\r\n\r\n  dispatch({\r\n    type: SAVE_CONSUMPTION_LIST,\r\n  });\r\n};\r\n\r\n// Save Consumption\r\nexport const clearConsumptionList = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_CONSUMPTIONS,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}