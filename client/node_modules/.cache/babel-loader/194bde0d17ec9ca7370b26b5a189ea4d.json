{"ast":null,"code":"/*!\n  * Bootstrap selector-engine.js v5.0.2 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SelectorEngine = factory());\n})(this, function () {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.2): dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NODE_TEXT = 3;\n  const SelectorEngine = {\n    find(selector) {\n      let element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;\n      return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n    },\n\n    findOne(selector) {\n      let element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;\n      return Element.prototype.querySelector.call(element, selector);\n    },\n\n    children(element, selector) {\n      return [].concat(...element.children).filter(child => child.matches(selector));\n    },\n\n    parents(element, selector) {\n      const parents = [];\n      let ancestor = element.parentNode;\n\n      while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n        if (ancestor.matches(selector)) {\n          parents.push(ancestor);\n        }\n\n        ancestor = ancestor.parentNode;\n      }\n\n      return parents;\n    },\n\n    prev(element, selector) {\n      let previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n\n    next(element, selector) {\n      let next = element.nextElementSibling;\n\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    }\n\n  };\n  return SelectorEngine;\n});","map":{"version":3,"sources":["../../src/dom/selector-engine.js"],"names":["NODE_TEXT","SelectorEngine","find","element","document","Element","findOne","children","child","parents","ancestor","Node","prev","previous","next"],"mappings":";;;;;;;;;EAAA;AACA;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;AACA;AACA;;EAEA,MAAMA,SAAS,GAAf,CAAA;QAEMC,cAAc,GAAG;IACrBC,IAAI,CAAA,QAAA,EAA+C;MAAA,IAApCC,OAAoC,uEAA1BC,QAAQ,CAA7B,eAA+C;MACjD,OAAO,GAAA,MAAA,CAAU,GAAGC,OAAO,CAAPA,SAAAA,CAAAA,gBAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAApB,QAAoBA,CAAb,CAAP;IAFmB,CAAA;;IAKrBC,OAAO,CAAA,QAAA,EAA+C;MAAA,IAApCH,OAAoC,uEAA1BC,QAAQ,CAA7B,eAA+C;MACpD,OAAOC,OAAO,CAAPA,SAAAA,CAAAA,aAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAAP,QAAOA,CAAP;IANmB,CAAA;;IASrBE,QAAQ,CAAA,OAAA,EAAA,QAAA,EAAoB;MAC1B,OAAO,GAAA,MAAA,CAAU,GAAGJ,OAAO,CAApB,QAAA,EAAA,MAAA,CACGK,KAAK,IAAIA,KAAK,CAALA,OAAAA,CADnB,QACmBA,CADZ,CAAP;IAVmB,CAAA;;IAcrBC,OAAO,CAAA,OAAA,EAAA,QAAA,EAAoB;MACzB,MAAMA,OAAO,GAAb,EAAA;MAEA,IAAIC,QAAQ,GAAGP,OAAO,CAAtB,UAAA;;MAEA,OAAOO,QAAQ,IAAIA,QAAQ,CAARA,QAAAA,KAAsBC,IAAI,CAAtCD,YAAAA,IAAuDA,QAAQ,CAARA,QAAAA,KAA9D,SAAA,EAA+F;QAC7F,IAAIA,QAAQ,CAARA,OAAAA,CAAJ,QAAIA,CAAJ,EAAgC;UAC9BD,OAAO,CAAPA,IAAAA,CAAAA,QAAAA;QACD;;QAEDC,QAAQ,GAAGA,QAAQ,CAAnBA,UAAAA;MACD;;MAED,OAAA,OAAA;IA3BmB,CAAA;;IA8BrBE,IAAI,CAAA,OAAA,EAAA,QAAA,EAAoB;MACtB,IAAIC,QAAQ,GAAGV,OAAO,CAAtB,sBAAA;;MAEA,OAAA,QAAA,EAAiB;QACf,IAAIU,QAAQ,CAARA,OAAAA,CAAJ,QAAIA,CAAJ,EAAgC;UAC9B,OAAO,CAAP,QAAO,CAAP;QACD;;QAEDA,QAAQ,GAAGA,QAAQ,CAAnBA,sBAAAA;MACD;;MAED,OAAA,EAAA;IAzCmB,CAAA;;IA4CrBC,IAAI,CAAA,OAAA,EAAA,QAAA,EAAoB;MACtB,IAAIA,IAAI,GAAGX,OAAO,CAAlB,kBAAA;;MAEA,OAAA,IAAA,EAAa;QACX,IAAIW,IAAI,CAAJA,OAAAA,CAAJ,QAAIA,CAAJ,EAA4B;UAC1B,OAAO,CAAP,IAAO,CAAP;QACD;;QAEDA,IAAI,GAAGA,IAAI,CAAXA,kBAAAA;MACD;;MAED,OAAA,EAAA;IACD;;EAxDoB,C","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children)\n      .filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (ancestor.matches(selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  }\n}\n\nexport default SelectorEngine\n"]},"metadata":{},"sourceType":"script"}