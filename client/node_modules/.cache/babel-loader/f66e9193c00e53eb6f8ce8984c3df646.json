{"ast":null,"code":"/*!\n  * Bootstrap modal.js v5.0.2 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/selector-engine.js'), require('./dom/event-handler.js'), require('./dom/manipulator.js'), require('./base-component.js')) : typeof define === 'function' && define.amd ? define(['./dom/selector-engine', './dom/event-handler', './dom/manipulator', './base-component'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Modal = factory(global.SelectorEngine, global.EventHandler, global.Manipulator, global.Base));\n})(this, function (SelectorEngine, EventHandler, Manipulator, BaseComponent) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var SelectorEngine__default = /*#__PURE__*/_interopDefaultLegacy(SelectorEngine);\n\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n\n  var Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n\n  var BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n\n  const MILLISECONDS_MULTIPLIER = 1000;\n  const TRANSITION_END = 'transitionend'; // Shoutout AngusCroll (https://goo.gl/pxwQGp)\n\n  const toType = obj => {\n    if (obj === null || obj === undefined) {\n      return `${obj}`;\n    }\n\n    return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n  };\n\n  const getSelector = element => {\n    let selector = element.getAttribute('data-bs-target');\n\n    if (!selector || selector === '#') {\n      let hrefAttr = element.getAttribute('href'); // The only valid content that could double as a selector are IDs or classes,\n      // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n      // `document.querySelector` will rightfully complain it is invalid.\n      // See https://github.com/twbs/bootstrap/issues/32273\n\n      if (!hrefAttr || !hrefAttr.includes('#') && !hrefAttr.startsWith('.')) {\n        return null;\n      } // Just in case some CMS puts out a full URL with the anchor appended\n\n\n      if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n        hrefAttr = `#${hrefAttr.split('#')[1]}`;\n      }\n\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null;\n    }\n\n    return selector;\n  };\n\n  const getElementFromSelector = element => {\n    const selector = getSelector(element);\n    return selector ? document.querySelector(selector) : null;\n  };\n\n  const getTransitionDurationFromElement = element => {\n    if (!element) {\n      return 0;\n    } // Get transition-duration of the element\n\n\n    let {\n      transitionDuration,\n      transitionDelay\n    } = window.getComputedStyle(element);\n    const floatTransitionDuration = Number.parseFloat(transitionDuration);\n    const floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found\n\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    } // If multiple durations are defined, take the first\n\n\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  };\n\n  const triggerTransitionEnd = element => {\n    element.dispatchEvent(new Event(TRANSITION_END));\n  };\n\n  const isElement = obj => {\n    if (!obj || typeof obj !== 'object') {\n      return false;\n    }\n\n    if (typeof obj.jquery !== 'undefined') {\n      obj = obj[0];\n    }\n\n    return typeof obj.nodeType !== 'undefined';\n  };\n\n  const getElement = obj => {\n    if (isElement(obj)) {\n      // it's a jQuery object or a node element\n      return obj.jquery ? obj[0] : obj;\n    }\n\n    if (typeof obj === 'string' && obj.length > 0) {\n      return SelectorEngine__default['default'].findOne(obj);\n    }\n\n    return null;\n  };\n\n  const typeCheckConfig = (componentName, config, configTypes) => {\n    Object.keys(configTypes).forEach(property => {\n      const expectedTypes = configTypes[property];\n      const value = config[property];\n      const valueType = value && isElement(value) ? 'element' : toType(value);\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(`${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n      }\n    });\n  };\n\n  const isVisible = element => {\n    if (!isElement(element) || element.getClientRects().length === 0) {\n      return false;\n    }\n\n    return getComputedStyle(element).getPropertyValue('visibility') === 'visible';\n  };\n\n  const reflow = element => element.offsetHeight;\n\n  const getjQuery = () => {\n    const {\n      jQuery\n    } = window;\n\n    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return jQuery;\n    }\n\n    return null;\n  };\n\n  const DOMContentLoadedCallbacks = [];\n\n  const onDOMContentLoaded = callback => {\n    if (document.readyState === 'loading') {\n      // add listener on the first call when the document is in loading state\n      if (!DOMContentLoadedCallbacks.length) {\n        document.addEventListener('DOMContentLoaded', () => {\n          DOMContentLoadedCallbacks.forEach(callback => callback());\n        });\n      }\n\n      DOMContentLoadedCallbacks.push(callback);\n    } else {\n      callback();\n    }\n  };\n\n  const isRTL = () => document.documentElement.dir === 'rtl';\n\n  const defineJQueryPlugin = plugin => {\n    onDOMContentLoaded(() => {\n      const $ = getjQuery();\n      /* istanbul ignore if */\n\n      if ($) {\n        const name = plugin.NAME;\n        const JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n\n        $.fn[name].noConflict = () => {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n\n  const execute = callback => {\n    if (typeof callback === 'function') {\n      callback();\n    }\n  };\n\n  const executeAfterTransition = function (callback, transitionElement) {\n    let waitForTransition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (!waitForTransition) {\n      execute(callback);\n      return;\n    }\n\n    const durationPadding = 5;\n    const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n    let called = false;\n\n    const handler = _ref => {\n      let {\n        target\n      } = _ref;\n\n      if (target !== transitionElement) {\n        return;\n      }\n\n      called = true;\n      transitionElement.removeEventListener(TRANSITION_END, handler);\n      execute(callback);\n    };\n\n    transitionElement.addEventListener(TRANSITION_END, handler);\n    setTimeout(() => {\n      if (!called) {\n        triggerTransitionEnd(transitionElement);\n      }\n    }, emulatedDuration);\n  };\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.2): util/scrollBar.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  const SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\n  const SELECTOR_STICKY_CONTENT = '.sticky-top';\n\n  class ScrollBarHelper {\n    constructor() {\n      this._element = document.body;\n    }\n\n    getWidth() {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n      const documentWidth = document.documentElement.clientWidth;\n      return Math.abs(window.innerWidth - documentWidth);\n    }\n\n    hide() {\n      const width = this.getWidth();\n\n      this._disableOverFlow(); // give padding to element to balance the hidden scrollbar width\n\n\n      this._setElementAttributes(this._element, 'paddingRight', calculatedValue => calculatedValue + width); // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n\n\n      this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + width);\n\n      this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - width);\n    }\n\n    _disableOverFlow() {\n      this._saveInitialAttribute(this._element, 'overflow');\n\n      this._element.style.overflow = 'hidden';\n    }\n\n    _setElementAttributes(selector, styleProp, callback) {\n      const scrollbarWidth = this.getWidth();\n\n      const manipulationCallBack = element => {\n        if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n          return;\n        }\n\n        this._saveInitialAttribute(element, styleProp);\n\n        const calculatedValue = window.getComputedStyle(element)[styleProp];\n        element.style[styleProp] = `${callback(Number.parseFloat(calculatedValue))}px`;\n      };\n\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n\n    reset() {\n      this._resetElementAttributes(this._element, 'overflow');\n\n      this._resetElementAttributes(this._element, 'paddingRight');\n\n      this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight');\n\n      this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight');\n    }\n\n    _saveInitialAttribute(element, styleProp) {\n      const actualValue = element.style[styleProp];\n\n      if (actualValue) {\n        Manipulator__default['default'].setDataAttribute(element, styleProp, actualValue);\n      }\n    }\n\n    _resetElementAttributes(selector, styleProp) {\n      const manipulationCallBack = element => {\n        const value = Manipulator__default['default'].getDataAttribute(element, styleProp);\n\n        if (typeof value === 'undefined') {\n          element.style.removeProperty(styleProp);\n        } else {\n          Manipulator__default['default'].removeDataAttribute(element, styleProp);\n          element.style[styleProp] = value;\n        }\n      };\n\n      this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n\n    _applyManipulationCallback(selector, callBack) {\n      if (isElement(selector)) {\n        callBack(selector);\n      } else {\n        SelectorEngine__default['default'].find(selector, this._element).forEach(callBack);\n      }\n    }\n\n    isOverflowing() {\n      return this.getWidth() > 0;\n    }\n\n  }\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.2): util/backdrop.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  const Default$1 = {\n    isVisible: true,\n    // if false, we use the backdrop helper without adding any element to the dom\n    isAnimated: false,\n    rootElement: 'body',\n    // give the choice to place backdrop under different elements\n    clickCallback: null\n  };\n  const DefaultType$1 = {\n    isVisible: 'boolean',\n    isAnimated: 'boolean',\n    rootElement: '(element|string)',\n    clickCallback: '(function|null)'\n  };\n  const NAME$1 = 'backdrop';\n  const CLASS_NAME_BACKDROP = 'modal-backdrop';\n  const CLASS_NAME_FADE$1 = 'fade';\n  const CLASS_NAME_SHOW$1 = 'show';\n  const EVENT_MOUSEDOWN = `mousedown.bs.${NAME$1}`;\n\n  class Backdrop {\n    constructor(config) {\n      this._config = this._getConfig(config);\n      this._isAppended = false;\n      this._element = null;\n    }\n\n    show(callback) {\n      if (!this._config.isVisible) {\n        execute(callback);\n        return;\n      }\n\n      this._append();\n\n      if (this._config.isAnimated) {\n        reflow(this._getElement());\n      }\n\n      this._getElement().classList.add(CLASS_NAME_SHOW$1);\n\n      this._emulateAnimation(() => {\n        execute(callback);\n      });\n    }\n\n    hide(callback) {\n      if (!this._config.isVisible) {\n        execute(callback);\n        return;\n      }\n\n      this._getElement().classList.remove(CLASS_NAME_SHOW$1);\n\n      this._emulateAnimation(() => {\n        this.dispose();\n        execute(callback);\n      });\n    } // Private\n\n\n    _getElement() {\n      if (!this._element) {\n        const backdrop = document.createElement('div');\n        backdrop.className = CLASS_NAME_BACKDROP;\n\n        if (this._config.isAnimated) {\n          backdrop.classList.add(CLASS_NAME_FADE$1);\n        }\n\n        this._element = backdrop;\n      }\n\n      return this._element;\n    }\n\n    _getConfig(config) {\n      config = { ...Default$1,\n        ...(typeof config === 'object' ? config : {})\n      }; // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n\n      config.rootElement = getElement(config.rootElement);\n      typeCheckConfig(NAME$1, config, DefaultType$1);\n      return config;\n    }\n\n    _append() {\n      if (this._isAppended) {\n        return;\n      }\n\n      this._config.rootElement.appendChild(this._getElement());\n\n      EventHandler__default['default'].on(this._getElement(), EVENT_MOUSEDOWN, () => {\n        execute(this._config.clickCallback);\n      });\n      this._isAppended = true;\n    }\n\n    dispose() {\n      if (!this._isAppended) {\n        return;\n      }\n\n      EventHandler__default['default'].off(this._element, EVENT_MOUSEDOWN);\n\n      this._element.remove();\n\n      this._isAppended = false;\n    }\n\n    _emulateAnimation(callback) {\n      executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n    }\n\n  }\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.2): modal.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n\n  const NAME = 'modal';\n  const DATA_KEY = 'bs.modal';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const ESCAPE_KEY = 'Escape';\n  const Default = {\n    backdrop: true,\n    keyboard: true,\n    focus: true\n  };\n  const DefaultType = {\n    backdrop: '(boolean|string)',\n    keyboard: 'boolean',\n    focus: 'boolean'\n  };\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const EVENT_FOCUSIN = `focusin${EVENT_KEY}`;\n  const EVENT_RESIZE = `resize${EVENT_KEY}`;\n  const EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`;\n  const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`;\n  const EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`;\n  const EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`;\n  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n  const CLASS_NAME_OPEN = 'modal-open';\n  const CLASS_NAME_FADE = 'fade';\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_STATIC = 'modal-static';\n  const SELECTOR_DIALOG = '.modal-dialog';\n  const SELECTOR_MODAL_BODY = '.modal-body';\n  const SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]';\n  const SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"modal\"]';\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Modal extends BaseComponent__default['default'] {\n    constructor(element, config) {\n      super(element);\n      this._config = this._getConfig(config);\n      this._dialog = SelectorEngine__default['default'].findOne(SELECTOR_DIALOG, this._element);\n      this._backdrop = this._initializeBackDrop();\n      this._isShown = false;\n      this._ignoreBackdropClick = false;\n      this._isTransitioning = false;\n      this._scrollBar = new ScrollBarHelper();\n    } // Getters\n\n\n    static get Default() {\n      return Default;\n    }\n\n    static get NAME() {\n      return NAME;\n    } // Public\n\n\n    toggle(relatedTarget) {\n      return this._isShown ? this.hide() : this.show(relatedTarget);\n    }\n\n    show(relatedTarget) {\n      if (this._isShown || this._isTransitioning) {\n        return;\n      }\n\n      const showEvent = EventHandler__default['default'].trigger(this._element, EVENT_SHOW, {\n        relatedTarget\n      });\n\n      if (showEvent.defaultPrevented) {\n        return;\n      }\n\n      this._isShown = true;\n\n      if (this._isAnimated()) {\n        this._isTransitioning = true;\n      }\n\n      this._scrollBar.hide();\n\n      document.body.classList.add(CLASS_NAME_OPEN);\n\n      this._adjustDialog();\n\n      this._setEscapeEvent();\n\n      this._setResizeEvent();\n\n      EventHandler__default['default'].on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, event => this.hide(event));\n      EventHandler__default['default'].on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n        EventHandler__default['default'].one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n          if (event.target === this._element) {\n            this._ignoreBackdropClick = true;\n          }\n        });\n      });\n\n      this._showBackdrop(() => this._showElement(relatedTarget));\n    }\n\n    hide(event) {\n      if (event && ['A', 'AREA'].includes(event.target.tagName)) {\n        event.preventDefault();\n      }\n\n      if (!this._isShown || this._isTransitioning) {\n        return;\n      }\n\n      const hideEvent = EventHandler__default['default'].trigger(this._element, EVENT_HIDE);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      this._isShown = false;\n\n      const isAnimated = this._isAnimated();\n\n      if (isAnimated) {\n        this._isTransitioning = true;\n      }\n\n      this._setEscapeEvent();\n\n      this._setResizeEvent();\n\n      EventHandler__default['default'].off(document, EVENT_FOCUSIN);\n\n      this._element.classList.remove(CLASS_NAME_SHOW);\n\n      EventHandler__default['default'].off(this._element, EVENT_CLICK_DISMISS);\n      EventHandler__default['default'].off(this._dialog, EVENT_MOUSEDOWN_DISMISS);\n\n      this._queueCallback(() => this._hideModal(), this._element, isAnimated);\n    }\n\n    dispose() {\n      [window, this._dialog].forEach(htmlElement => EventHandler__default['default'].off(htmlElement, EVENT_KEY));\n\n      this._backdrop.dispose();\n\n      super.dispose();\n      /**\n       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n       * Do not move `document` in `htmlElements` array\n       * It will remove `EVENT_CLICK_DATA_API` event that should remain\n       */\n\n      EventHandler__default['default'].off(document, EVENT_FOCUSIN);\n    }\n\n    handleUpdate() {\n      this._adjustDialog();\n    } // Private\n\n\n    _initializeBackDrop() {\n      return new Backdrop({\n        isVisible: Boolean(this._config.backdrop),\n        // 'static' option will be translated to true, and booleans will keep their value\n        isAnimated: this._isAnimated()\n      });\n    }\n\n    _getConfig(config) {\n      config = { ...Default,\n        ...Manipulator__default['default'].getDataAttributes(this._element),\n        ...(typeof config === 'object' ? config : {})\n      };\n      typeCheckConfig(NAME, config, DefaultType);\n      return config;\n    }\n\n    _showElement(relatedTarget) {\n      const isAnimated = this._isAnimated();\n\n      const modalBody = SelectorEngine__default['default'].findOne(SELECTOR_MODAL_BODY, this._dialog);\n\n      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n        // Don't move modal's DOM position\n        document.body.appendChild(this._element);\n      }\n\n      this._element.style.display = 'block';\n\n      this._element.removeAttribute('aria-hidden');\n\n      this._element.setAttribute('aria-modal', true);\n\n      this._element.setAttribute('role', 'dialog');\n\n      this._element.scrollTop = 0;\n\n      if (modalBody) {\n        modalBody.scrollTop = 0;\n      }\n\n      if (isAnimated) {\n        reflow(this._element);\n      }\n\n      this._element.classList.add(CLASS_NAME_SHOW);\n\n      if (this._config.focus) {\n        this._enforceFocus();\n      }\n\n      const transitionComplete = () => {\n        if (this._config.focus) {\n          this._element.focus();\n        }\n\n        this._isTransitioning = false;\n        EventHandler__default['default'].trigger(this._element, EVENT_SHOWN, {\n          relatedTarget\n        });\n      };\n\n      this._queueCallback(transitionComplete, this._dialog, isAnimated);\n    }\n\n    _enforceFocus() {\n      EventHandler__default['default'].off(document, EVENT_FOCUSIN); // guard against infinite focus loop\n\n      EventHandler__default['default'].on(document, EVENT_FOCUSIN, event => {\n        if (document !== event.target && this._element !== event.target && !this._element.contains(event.target)) {\n          this._element.focus();\n        }\n      });\n    }\n\n    _setEscapeEvent() {\n      if (this._isShown) {\n        EventHandler__default['default'].on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n          if (this._config.keyboard && event.key === ESCAPE_KEY) {\n            event.preventDefault();\n            this.hide();\n          } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n            this._triggerBackdropTransition();\n          }\n        });\n      } else {\n        EventHandler__default['default'].off(this._element, EVENT_KEYDOWN_DISMISS);\n      }\n    }\n\n    _setResizeEvent() {\n      if (this._isShown) {\n        EventHandler__default['default'].on(window, EVENT_RESIZE, () => this._adjustDialog());\n      } else {\n        EventHandler__default['default'].off(window, EVENT_RESIZE);\n      }\n    }\n\n    _hideModal() {\n      this._element.style.display = 'none';\n\n      this._element.setAttribute('aria-hidden', true);\n\n      this._element.removeAttribute('aria-modal');\n\n      this._element.removeAttribute('role');\n\n      this._isTransitioning = false;\n\n      this._backdrop.hide(() => {\n        document.body.classList.remove(CLASS_NAME_OPEN);\n\n        this._resetAdjustments();\n\n        this._scrollBar.reset();\n\n        EventHandler__default['default'].trigger(this._element, EVENT_HIDDEN);\n      });\n    }\n\n    _showBackdrop(callback) {\n      EventHandler__default['default'].on(this._element, EVENT_CLICK_DISMISS, event => {\n        if (this._ignoreBackdropClick) {\n          this._ignoreBackdropClick = false;\n          return;\n        }\n\n        if (event.target !== event.currentTarget) {\n          return;\n        }\n\n        if (this._config.backdrop === true) {\n          this.hide();\n        } else if (this._config.backdrop === 'static') {\n          this._triggerBackdropTransition();\n        }\n      });\n\n      this._backdrop.show(callback);\n    }\n\n    _isAnimated() {\n      return this._element.classList.contains(CLASS_NAME_FADE);\n    }\n\n    _triggerBackdropTransition() {\n      const hideEvent = EventHandler__default['default'].trigger(this._element, EVENT_HIDE_PREVENTED);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      const {\n        classList,\n        scrollHeight,\n        style\n      } = this._element;\n      const isModalOverflowing = scrollHeight > document.documentElement.clientHeight; // return if the following background transition hasn't yet completed\n\n      if (!isModalOverflowing && style.overflowY === 'hidden' || classList.contains(CLASS_NAME_STATIC)) {\n        return;\n      }\n\n      if (!isModalOverflowing) {\n        style.overflowY = 'hidden';\n      }\n\n      classList.add(CLASS_NAME_STATIC);\n\n      this._queueCallback(() => {\n        classList.remove(CLASS_NAME_STATIC);\n\n        if (!isModalOverflowing) {\n          this._queueCallback(() => {\n            style.overflowY = '';\n          }, this._dialog);\n        }\n      }, this._dialog);\n\n      this._element.focus();\n    } // ----------------------------------------------------------------------\n    // the following methods are used to handle overflowing modals\n    // ----------------------------------------------------------------------\n\n\n    _adjustDialog() {\n      const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n      const scrollbarWidth = this._scrollBar.getWidth();\n\n      const isBodyOverflowing = scrollbarWidth > 0;\n\n      if (!isBodyOverflowing && isModalOverflowing && !isRTL() || isBodyOverflowing && !isModalOverflowing && isRTL()) {\n        this._element.style.paddingLeft = `${scrollbarWidth}px`;\n      }\n\n      if (isBodyOverflowing && !isModalOverflowing && !isRTL() || !isBodyOverflowing && isModalOverflowing && isRTL()) {\n        this._element.style.paddingRight = `${scrollbarWidth}px`;\n      }\n    }\n\n    _resetAdjustments() {\n      this._element.style.paddingLeft = '';\n      this._element.style.paddingRight = '';\n    } // Static\n\n\n    static jQueryInterface(config, relatedTarget) {\n      return this.each(function () {\n        const data = Modal.getOrCreateInstance(this, config);\n\n        if (typeof config !== 'string') {\n          return;\n        }\n\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n\n        data[config](relatedTarget);\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  EventHandler__default['default'].on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    const target = getElementFromSelector(this);\n\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n\n    EventHandler__default['default'].one(target, EVENT_SHOW, showEvent => {\n      if (showEvent.defaultPrevented) {\n        // only register focus restorer if modal will actually get shown\n        return;\n      }\n\n      EventHandler__default['default'].one(target, EVENT_HIDDEN, () => {\n        if (isVisible(this)) {\n          this.focus();\n        }\n      });\n    });\n    const data = Modal.getOrCreateInstance(target);\n    data.toggle(this);\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   * add .Modal to jQuery only if jQuery is present\n   */\n\n  defineJQueryPlugin(Modal);\n  return Modal;\n});","map":{"version":3,"sources":["../src/util/index.js","../src/util/scrollbar.js","../src/util/backdrop.js","../src/modal.js"],"names":["MILLISECONDS_MULTIPLIER","TRANSITION_END","toType","obj","getSelector","element","selector","hrefAttr","getElementFromSelector","document","getTransitionDurationFromElement","transitionDelay","window","floatTransitionDuration","Number","floatTransitionDelay","transitionDuration","triggerTransitionEnd","isElement","getElement","SelectorEngine","typeCheckConfig","Object","property","expectedTypes","configTypes","value","config","valueType","componentName","isVisible","getComputedStyle","reflow","getjQuery","jQuery","DOMContentLoadedCallbacks","onDOMContentLoaded","callback","isRTL","defineJQueryPlugin","plugin","$","name","JQUERY_NO_CONFLICT","execute","executeAfterTransition","waitForTransition","durationPadding","emulatedDuration","called","handler","target","transitionElement","setTimeout","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","constructor","getWidth","documentWidth","Math","hide","width","calculatedValue","_disableOverFlow","_setElementAttributes","scrollbarWidth","manipulationCallBack","reset","_saveInitialAttribute","actualValue","Manipulator","_resetElementAttributes","_applyManipulationCallback","callBack","isOverflowing","Default","isAnimated","rootElement","clickCallback","DefaultType","NAME","CLASS_NAME_BACKDROP","CLASS_NAME_FADE","CLASS_NAME_SHOW","EVENT_MOUSEDOWN","show","_getElement","backdrop","_getConfig","_append","EventHandler","dispose","_emulateAnimation","DATA_KEY","EVENT_KEY","DATA_API_KEY","ESCAPE_KEY","keyboard","focus","EVENT_HIDE","EVENT_HIDE_PREVENTED","EVENT_HIDDEN","EVENT_SHOW","EVENT_SHOWN","EVENT_FOCUSIN","EVENT_RESIZE","EVENT_CLICK_DISMISS","EVENT_KEYDOWN_DISMISS","EVENT_MOUSEUP_DISMISS","EVENT_MOUSEDOWN_DISMISS","EVENT_CLICK_DATA_API","CLASS_NAME_OPEN","CLASS_NAME_STATIC","SELECTOR_DIALOG","SELECTOR_MODAL_BODY","SELECTOR_DATA_TOGGLE","SELECTOR_DATA_DISMISS","BaseComponent","toggle","showEvent","relatedTarget","event","hideEvent","htmlElement","handleUpdate","_initializeBackDrop","Boolean","_showElement","modalBody","Node","transitionComplete","_enforceFocus","_setEscapeEvent","_setResizeEvent","_hideModal","_showBackdrop","_isAnimated","_triggerBackdropTransition","style","isModalOverflowing","scrollHeight","classList","_adjustDialog","isBodyOverflowing","_resetAdjustments","jQueryInterface","data","Modal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;EAUA,MAAMA,uBAAuB,GAA7B,IAAA;EACA,MAAMC,cAAc,GAApB,eAAA,C,CAAA;;EAGA,MAAMC,MAAM,GAAGC,GAAG,IAAI;IACpB,IAAIA,GAAG,KAAHA,IAAAA,IAAgBA,GAAG,KAAvB,SAAA,EAAuC;MACrC,OAAQ,GAAEA,GAAV,EAAA;IACD;;IAED,OAAO,GAAA,QAAA,CAAA,IAAA,CAAA,GAAA,EAAA,KAAA,CAAA,aAAA,EAAA,CAAA,EAAP,WAAO,EAAP;EALF,CAAA;;EAsBA,MAAMC,WAAW,GAAGC,OAAO,IAAI;IAC7B,IAAIC,QAAQ,GAAGD,OAAO,CAAPA,YAAAA,CAAf,gBAAeA,CAAf;;IAEA,IAAI,CAAA,QAAA,IAAaC,QAAQ,KAAzB,GAAA,EAAmC;MACjC,IAAIC,QAAQ,GAAGF,OAAO,CAAPA,YAAAA,CADkB,MAClBA,CAAf,CADiC,CAAA;MAIjC;MACA;MACA;;MACA,IAAI,CAAA,QAAA,IAAc,CAACE,QAAQ,CAARA,QAAAA,CAAD,GAACA,CAAD,IAA2B,CAACA,QAAQ,CAARA,UAAAA,CAA9C,GAA8CA,CAA9C,EAAyE;QACvE,OAAA,IAAA;MAR+B,CAAA,CAAA;;;MAYjC,IAAIA,QAAQ,CAARA,QAAAA,CAAAA,GAAAA,KAA0B,CAACA,QAAQ,CAARA,UAAAA,CAA/B,GAA+BA,CAA/B,EAAyD;QACvDA,QAAQ,GAAI,IAAGA,QAAQ,CAARA,KAAAA,CAAAA,GAAAA,EAAAA,CAAAA,CAAfA,EAAAA;MACD;;MAEDD,QAAQ,GAAGC,QAAQ,IAAIA,QAAQ,KAApBA,GAAAA,GAA+BA,QAAQ,CAAvCA,IAA+BA,EAA/BA,GAAXD,IAAAA;IACD;;IAED,OAAA,QAAA;EAtBF,CAAA;;EAmCA,MAAME,sBAAsB,GAAGH,OAAO,IAAI;IACxC,MAAMC,QAAQ,GAAGF,WAAW,CAA5B,OAA4B,CAA5B;IAEA,OAAOE,QAAQ,GAAGG,QAAQ,CAARA,aAAAA,CAAH,QAAGA,CAAH,GAAf,IAAA;EAHF,CAAA;;EAMA,MAAMC,gCAAgC,GAAGL,OAAO,IAAI;IAClD,IAAI,CAAJ,OAAA,EAAc;MACZ,OAAA,CAAA;IAFgD,CAAA,CAAA;;;IAMlD,IAAI;MAAA,kBAAA;MAAsBM;IAAtB,IAA0CC,MAAM,CAANA,gBAAAA,CAA9C,OAA8CA,CAA9C;IAEA,MAAMC,uBAAuB,GAAGC,MAAM,CAANA,UAAAA,CAAhC,kBAAgCA,CAAhC;IACA,MAAMC,oBAAoB,GAAGD,MAAM,CAANA,UAAAA,CATqB,eASrBA,CAA7B,CATkD,CAAA;;IAYlD,IAAI,CAAA,uBAAA,IAA4B,CAAhC,oBAAA,EAAuD;MACrD,OAAA,CAAA;IAbgD,CAAA,CAAA;;;IAiBlDE,kBAAkB,GAAGA,kBAAkB,CAAlBA,KAAAA,CAAAA,GAAAA,EAArBA,CAAqBA,CAArBA;IACAL,eAAe,GAAGA,eAAe,CAAfA,KAAAA,CAAAA,GAAAA,EAAlBA,CAAkBA,CAAlBA;IAEA,OAAO,CAACG,MAAM,CAANA,UAAAA,CAAAA,kBAAAA,IAAwCA,MAAM,CAANA,UAAAA,CAAzC,eAAyCA,CAAzC,IAAP,uBAAA;EApBF,CAAA;;EAuBA,MAAMG,oBAAoB,GAAGZ,OAAO,IAAI;IACtCA,OAAO,CAAPA,aAAAA,CAAsB,IAAA,KAAA,CAAtBA,cAAsB,CAAtBA;EADF,CAAA;;EAIA,MAAMa,SAAS,GAAGf,GAAG,IAAI;IACvB,IAAI,CAAA,GAAA,IAAQ,OAAA,GAAA,KAAZ,QAAA,EAAqC;MACnC,OAAA,KAAA;IACD;;IAED,IAAI,OAAOA,GAAG,CAAV,MAAA,KAAJ,WAAA,EAAuC;MACrCA,GAAG,GAAGA,GAAG,CAATA,CAAS,CAATA;IACD;;IAED,OAAO,OAAOA,GAAG,CAAV,QAAA,KAAP,WAAA;EATF,CAAA;;EAYA,MAAMgB,UAAU,GAAGhB,GAAG,IAAI;IACxB,IAAIe,SAAS,CAAb,GAAa,CAAb,EAAoB;MAAE;MACpB,OAAOf,GAAG,CAAHA,MAAAA,GAAaA,GAAG,CAAhBA,CAAgB,CAAhBA,GAAP,GAAA;IACD;;IAED,IAAI,OAAA,GAAA,KAAA,QAAA,IAA2BA,GAAG,CAAHA,MAAAA,GAA/B,CAAA,EAA+C;MAC7C,OAAOiB,uBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAP,GAAOA,CAAP;IACD;;IAED,OAAA,IAAA;EATF,CAAA;;EAYA,MAAMC,eAAe,GAAG,CAAA,aAAA,EAAA,MAAA,EAAA,WAAA,KAAwC;IAC9DC,MAAM,CAANA,IAAAA,CAAAA,WAAAA,EAAAA,OAAAA,CAAiCC,QAAQ,IAAI;MAC3C,MAAMC,aAAa,GAAGC,WAAW,CAAjC,QAAiC,CAAjC;MACA,MAAMC,KAAK,GAAGC,MAAM,CAApB,QAAoB,CAApB;MACA,MAAMC,SAAS,GAAGF,KAAK,IAAIR,SAAS,CAAlBQ,KAAkB,CAAlBA,GAAAA,SAAAA,GAAwCxB,MAAM,CAAhE,KAAgE,CAAhE;;MAEA,IAAI,CAAC,IAAA,MAAA,CAAA,aAAA,EAAA,IAAA,CAAL,SAAK,CAAL,EAAgD;QAC9C,MAAM,IAAA,SAAA,CACH,GAAE2B,aAAa,CAAbA,WAAAA,EAA4B,aAAYN,QAAS,oBAAmBK,SAAU,wBAAuBJ,aAD1G,IAAM,CAAN;MAGD;IATHF,CAAAA;EADF,CAAA;;EAcA,MAAMQ,SAAS,GAAGzB,OAAO,IAAI;IAC3B,IAAI,CAACa,SAAS,CAAV,OAAU,CAAV,IAAuBb,OAAO,CAAPA,cAAAA,GAAAA,MAAAA,KAA3B,CAAA,EAAkE;MAChE,OAAA,KAAA;IACD;;IAED,OAAO0B,gBAAgB,CAAhBA,OAAgB,CAAhBA,CAAAA,gBAAAA,CAAAA,YAAAA,MAAP,SAAA;EALF,CAAA;;EAiDA,MAAMC,MAAM,GAAG3B,OAAO,IAAIA,OAAO,CAAjC,YAAA;;EAEA,MAAM4B,SAAS,GAAG,MAAM;IACtB,MAAM;MAAEC;IAAF,IAAN,MAAA;;IAEA,IAAIA,MAAM,IAAI,CAACzB,QAAQ,CAARA,IAAAA,CAAAA,YAAAA,CAAf,mBAAeA,CAAf,EAAgE;MAC9D,OAAA,MAAA;IACD;;IAED,OAAA,IAAA;EAPF,CAAA;;EAUA,MAAM0B,yBAAyB,GAA/B,EAAA;;EAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;IACrC,IAAI5B,QAAQ,CAARA,UAAAA,KAAJ,SAAA,EAAuC;MACrC;MACA,IAAI,CAAC0B,yBAAyB,CAA9B,MAAA,EAAuC;QACrC1B,QAAQ,CAARA,gBAAAA,CAAAA,kBAAAA,EAA8C,MAAM;UAClD0B,yBAAyB,CAAzBA,OAAAA,CAAkCE,QAAQ,IAAIA,QAA9CF,EAAAA;QADF1B,CAAAA;MAGD;;MAED0B,yBAAyB,CAAzBA,IAAAA,CAAAA,QAAAA;IARF,CAAA,MASO;MACLE,QAAQ;IACT;EAZH,CAAA;;EAeA,MAAMC,KAAK,GAAG,MAAM7B,QAAQ,CAARA,eAAAA,CAAAA,GAAAA,KAApB,KAAA;;EAEA,MAAM8B,kBAAkB,GAAGC,MAAM,IAAI;IACnCJ,kBAAkB,CAAC,MAAM;MACvB,MAAMK,CAAC,GAAGR,SAAV,EAAA;MACA;;MACA,IAAA,CAAA,EAAO;QACL,MAAMS,IAAI,GAAGF,MAAM,CAAnB,IAAA;QACA,MAAMG,kBAAkB,GAAGF,CAAC,CAADA,EAAAA,CAA3B,IAA2BA,CAA3B;QACAA,CAAC,CAADA,EAAAA,CAAAA,IAAAA,IAAaD,MAAM,CAAnBC,eAAAA;QACAA,CAAC,CAADA,EAAAA,CAAAA,IAAAA,EAAAA,WAAAA,GAAAA,MAAAA;;QACAA,CAAC,CAADA,EAAAA,CAAAA,IAAAA,EAAAA,UAAAA,GAAwB,MAAM;UAC5BA,CAAC,CAADA,EAAAA,CAAAA,IAAAA,IAAAA,kBAAAA;UACA,OAAOD,MAAM,CAAb,eAAA;QAFFC,CAAAA;MAID;IAZHL,CAAkB,CAAlBA;EADF,CAAA;;EAiBA,MAAMQ,OAAO,GAAGP,QAAQ,IAAI;IAC1B,IAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;MAClCA,QAAQ;IACT;EAHH,CAAA;;EAMA,MAAMQ,sBAAsB,GAAG,UAAA,QAAA,EAAA,iBAAA,EAA2D;IAAA,IAA7BC,iBAA6B,uEAA3D,IAA2D;;IACxF,IAAI,CAAJ,iBAAA,EAAwB;MACtBF,OAAO,CAAPA,QAAO,CAAPA;MACA;IACD;;IAED,MAAMG,eAAe,GAArB,CAAA;IACA,MAAMC,gBAAgB,GAAGtC,gCAAgC,CAAhCA,iBAAgC,CAAhCA,GAAzB,eAAA;IAEA,IAAIuC,MAAM,GAAV,KAAA;;IAEA,MAAMC,OAAO,GAAG,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;;MAC9B,IAAIA,MAAM,KAAV,iBAAA,EAAkC;QAChC;MACD;;MAEDF,MAAM,GAANA,IAAAA;MACAG,iBAAiB,CAAjBA,mBAAAA,CAAAA,cAAAA,EAAAA,OAAAA;MACAR,OAAO,CAAPA,QAAO,CAAPA;IAPF,CAAA;;IAUAQ,iBAAiB,CAAjBA,gBAAAA,CAAAA,cAAAA,EAAAA,OAAAA;IACAC,UAAU,CAAC,MAAM;MACf,IAAI,CAAJ,MAAA,EAAa;QACXpC,oBAAoB,CAApBA,iBAAoB,CAApBA;MACD;IAHO,CAAA,EAAVoC,gBAAU,CAAVA;EAtBF,CAAA;ECrPA;AACA;AACA;AACA;AACA;AACA;;;EAMA,MAAMC,sBAAsB,GAA5B,mDAAA;EACA,MAAMC,uBAAuB,GAA7B,aAAA;;EAEA,MAAA,eAAA,CAAsB;IACpBC,WAAW,GAAG;MACZ,KAAA,QAAA,GAAgB/C,QAAQ,CAAxB,IAAA;IACD;;IAEDgD,QAAQ,GAAG;MACT;MACA,MAAMC,aAAa,GAAGjD,QAAQ,CAARA,eAAAA,CAAtB,WAAA;MACA,OAAOkD,IAAI,CAAJA,GAAAA,CAAS/C,MAAM,CAANA,UAAAA,GAAhB,aAAO+C,CAAP;IACD;;IAEDC,IAAI,GAAG;MACL,MAAMC,KAAK,GAAG,KAAd,QAAc,EAAd;;MACA,KAFK,gBAEL,GAFK,CAAA;;;MAIL,KAAA,qBAAA,CAA2B,KAA3B,QAAA,EAAA,cAAA,EAA0DC,eAAe,IAAIA,eAAe,GAJvF,KAIL,EAJK,CAAA;;;MAML,KAAA,qBAAA,CAAA,sBAAA,EAAA,cAAA,EAAmEA,eAAe,IAAIA,eAAe,GAArG,KAAA;;MACA,KAAA,qBAAA,CAAA,uBAAA,EAAA,aAAA,EAAmEA,eAAe,IAAIA,eAAe,GAArG,KAAA;IACD;;IAEDC,gBAAgB,GAAG;MACjB,KAAA,qBAAA,CAA2B,KAA3B,QAAA,EAAA,UAAA;;MACA,KAAA,QAAA,CAAA,KAAA,CAAA,QAAA,GAAA,QAAA;IACD;;IAEDC,qBAAqB,CAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAgC;MACnD,MAAMC,cAAc,GAAG,KAAvB,QAAuB,EAAvB;;MACA,MAAMC,oBAAoB,GAAG7D,OAAO,IAAI;QACtC,IAAIA,OAAO,KAAK,KAAZA,QAAAA,IAA6BO,MAAM,CAANA,UAAAA,GAAoBP,OAAO,CAAPA,WAAAA,GAArD,cAAA,EAA2F;UACzF;QACD;;QAED,KAAA,qBAAA,CAAA,OAAA,EAAA,SAAA;;QACA,MAAMyD,eAAe,GAAGlD,MAAM,CAANA,gBAAAA,CAAAA,OAAAA,EAAxB,SAAwBA,CAAxB;QACAP,OAAO,CAAPA,KAAAA,CAAAA,SAAAA,IAA4B,GAAEgC,QAAQ,CAACvB,MAAM,CAANA,UAAAA,CAAD,eAACA,CAAD,CAAtCT,IAAAA;MAPF,CAAA;;MAUA,KAAA,0BAAA,CAAA,QAAA,EAAA,oBAAA;IACD;;IAED8D,KAAK,GAAG;MACN,KAAA,uBAAA,CAA6B,KAA7B,QAAA,EAAA,UAAA;;MACA,KAAA,uBAAA,CAA6B,KAA7B,QAAA,EAAA,cAAA;;MACA,KAAA,uBAAA,CAAA,sBAAA,EAAA,cAAA;;MACA,KAAA,uBAAA,CAAA,uBAAA,EAAA,aAAA;IACD;;IAEDC,qBAAqB,CAAA,OAAA,EAAA,SAAA,EAAqB;MACxC,MAAMC,WAAW,GAAGhE,OAAO,CAAPA,KAAAA,CAApB,SAAoBA,CAApB;;MACA,IAAA,WAAA,EAAiB;QACfiE,oBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAAA,SAAAA,EAAAA,WAAAA;MACD;IACF;;IAEDC,uBAAuB,CAAA,QAAA,EAAA,SAAA,EAAsB;MAC3C,MAAML,oBAAoB,GAAG7D,OAAO,IAAI;QACtC,MAAMqB,KAAK,GAAG4C,oBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,gBAAAA,CAAAA,OAAAA,EAAd,SAAcA,CAAd;;QACA,IAAI,OAAA,KAAA,KAAJ,WAAA,EAAkC;UAChCjE,OAAO,CAAPA,KAAAA,CAAAA,cAAAA,CAAAA,SAAAA;QADF,CAAA,MAEO;UACLiE,oBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,mBAAAA,CAAAA,OAAAA,EAAAA,SAAAA;UACAjE,OAAO,CAAPA,KAAAA,CAAAA,SAAAA,IAAAA,KAAAA;QACD;MAPH,CAAA;;MAUA,KAAA,0BAAA,CAAA,QAAA,EAAA,oBAAA;IACD;;IAEDmE,0BAA0B,CAAA,QAAA,EAAA,QAAA,EAAqB;MAC7C,IAAItD,SAAS,CAAb,QAAa,CAAb,EAAyB;QACvBuD,QAAQ,CAARA,QAAQ,CAARA;MADF,CAAA,MAEO;QACLrD,uBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,IAAAA,CAAAA,QAAAA,EAA8B,KAA9BA,QAAAA,EAAAA,OAAAA,CAAAA,QAAAA;MACD;IACF;;IAEDsD,aAAa,GAAG;MACd,OAAO,KAAA,QAAA,KAAP,CAAA;IACD;;EA/EmB;ECdtB;AACA;AACA;AACA;AACA;AACA;;;EAKA,MAAMC,SAAO,GAAG;IACd7C,SAAS,EADK,IAAA;IACG;IACjB8C,UAAU,EAFI,KAAA;IAGdC,WAAW,EAHG,MAAA;IAGO;IACrBC,aAAa,EAAE;EAJD,CAAhB;EAOA,MAAMC,aAAW,GAAG;IAClBjD,SAAS,EADS,SAAA;IAElB8C,UAAU,EAFQ,SAAA;IAGlBC,WAAW,EAHO,kBAAA;IAIlBC,aAAa,EAAE;EAJG,CAApB;EAMA,MAAME,MAAI,GAAV,UAAA;EACA,MAAMC,mBAAmB,GAAzB,gBAAA;EACA,MAAMC,iBAAe,GAArB,MAAA;EACA,MAAMC,iBAAe,GAArB,MAAA;EAEA,MAAMC,eAAe,GAAI,gBAAeJ,MAAxC,EAAA;;EAEA,MAAA,QAAA,CAAe;IACbxB,WAAW,CAAA,MAAA,EAAS;MAClB,KAAA,OAAA,GAAe,KAAA,UAAA,CAAf,MAAe,CAAf;MACA,KAAA,WAAA,GAAA,KAAA;MACA,KAAA,QAAA,GAAA,IAAA;IACD;;IAED6B,IAAI,CAAA,QAAA,EAAW;MACb,IAAI,CAAC,KAAA,OAAA,CAAL,SAAA,EAA6B;QAC3BzC,OAAO,CAAPA,QAAO,CAAPA;QACA;MACD;;MAED,KAAA,OAAA;;MAEA,IAAI,KAAA,OAAA,CAAJ,UAAA,EAA6B;QAC3BZ,MAAM,CAAC,KAAPA,WAAO,EAAD,CAANA;MACD;;MAED,KAAA,WAAA,GAAA,SAAA,CAAA,GAAA,CAAA,iBAAA;;MAEA,KAAA,iBAAA,CAAuB,MAAM;QAC3BY,OAAO,CAAPA,QAAO,CAAPA;MADF,CAAA;IAGD;;IAEDgB,IAAI,CAAA,QAAA,EAAW;MACb,IAAI,CAAC,KAAA,OAAA,CAAL,SAAA,EAA6B;QAC3BhB,OAAO,CAAPA,QAAO,CAAPA;QACA;MACD;;MAED,KAAA,WAAA,GAAA,SAAA,CAAA,MAAA,CAAA,iBAAA;;MAEA,KAAA,iBAAA,CAAuB,MAAM;QAC3B,KAAA,OAAA;QACAA,OAAO,CAAPA,QAAO,CAAPA;MAFF,CAAA;IAlCW,CAAA,CAAA;;;IA0Cb0C,WAAW,GAAG;MACZ,IAAI,CAAC,KAAL,QAAA,EAAoB;QAClB,MAAMC,QAAQ,GAAG9E,QAAQ,CAARA,aAAAA,CAAjB,KAAiBA,CAAjB;QACA8E,QAAQ,CAARA,SAAAA,GAAAA,mBAAAA;;QACA,IAAI,KAAA,OAAA,CAAJ,UAAA,EAA6B;UAC3BA,QAAQ,CAARA,SAAAA,CAAAA,GAAAA,CAAAA,iBAAAA;QACD;;QAED,KAAA,QAAA,GAAA,QAAA;MACD;;MAED,OAAO,KAAP,QAAA;IACD;;IAEDC,UAAU,CAAA,MAAA,EAAS;MACjB7D,MAAM,GAAG,EACP,GADO,SAAA;QAEP,IAAI,OAAA,MAAA,KAAA,QAAA,GAAA,MAAA,GAAJ,EAAA;MAFO,CAATA,CADiB,CAAA;;MAOjBA,MAAM,CAANA,WAAAA,GAAqBR,UAAU,CAACQ,MAAM,CAAtCA,WAA+B,CAA/BA;MACAN,eAAe,CAAA,MAAA,EAAA,MAAA,EAAfA,aAAe,CAAfA;MACA,OAAA,MAAA;IACD;;IAEDoE,OAAO,GAAG;MACR,IAAI,KAAJ,WAAA,EAAsB;QACpB;MACD;;MAED,KAAA,OAAA,CAAA,WAAA,CAAA,WAAA,CAAqC,KAArC,WAAqC,EAArC;;MAEAC,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAgB,KAAhBA,WAAgB,EAAhBA,EAAAA,eAAAA,EAAqD,MAAM;QACzD9C,OAAO,CAAC,KAAA,OAAA,CAARA,aAAO,CAAPA;MADF8C,CAAAA;MAIA,KAAA,WAAA,GAAA,IAAA;IACD;;IAEDC,OAAO,GAAG;MACR,IAAI,CAAC,KAAL,WAAA,EAAuB;QACrB;MACD;;MAEDD,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAiB,KAAjBA,QAAAA,EAAAA,eAAAA;;MAEA,KAAA,QAAA,CAAA,MAAA;;MACA,KAAA,WAAA,GAAA,KAAA;IACD;;IAEDE,iBAAiB,CAAA,QAAA,EAAW;MAC1B/C,sBAAsB,CAAA,QAAA,EAAW,KAAX,WAAW,EAAX,EAA+B,KAAA,OAAA,CAArDA,UAAsB,CAAtBA;IACD;;EA/FY;EC9Bf;AACA;AACA;AACA;AACA;AACA;;EAiBA;AACA;AACA;AACA;AACA;;;EAEA,MAAMmC,IAAI,GAAV,OAAA;EACA,MAAMa,QAAQ,GAAd,UAAA;EACA,MAAMC,SAAS,GAAI,IAAGD,QAAtB,EAAA;EACA,MAAME,YAAY,GAAlB,WAAA;EACA,MAAMC,UAAU,GAAhB,QAAA;EAEA,MAAMrB,OAAO,GAAG;IACdY,QAAQ,EADM,IAAA;IAEdU,QAAQ,EAFM,IAAA;IAGdC,KAAK,EAAE;EAHO,CAAhB;EAMA,MAAMnB,WAAW,GAAG;IAClBQ,QAAQ,EADU,kBAAA;IAElBU,QAAQ,EAFU,SAAA;IAGlBC,KAAK,EAAE;EAHW,CAApB;EAMA,MAAMC,UAAU,GAAI,OAAML,SAA1B,EAAA;EACA,MAAMM,oBAAoB,GAAI,gBAAeN,SAA7C,EAAA;EACA,MAAMO,YAAY,GAAI,SAAQP,SAA9B,EAAA;EACA,MAAMQ,UAAU,GAAI,OAAMR,SAA1B,EAAA;EACA,MAAMS,WAAW,GAAI,QAAOT,SAA5B,EAAA;EACA,MAAMU,aAAa,GAAI,UAASV,SAAhC,EAAA;EACA,MAAMW,YAAY,GAAI,SAAQX,SAA9B,EAAA;EACA,MAAMY,mBAAmB,GAAI,gBAAeZ,SAA5C,EAAA;EACA,MAAMa,qBAAqB,GAAI,kBAAiBb,SAAhD,EAAA;EACA,MAAMc,qBAAqB,GAAI,kBAAiBd,SAAhD,EAAA;EACA,MAAMe,uBAAuB,GAAI,oBAAmBf,SAApD,EAAA;EACA,MAAMgB,oBAAoB,GAAI,QAAOhB,SAAU,GAAEC,YAAjD,EAAA;EAEA,MAAMgB,eAAe,GAArB,YAAA;EACA,MAAM7B,eAAe,GAArB,MAAA;EACA,MAAMC,eAAe,GAArB,MAAA;EACA,MAAM6B,iBAAiB,GAAvB,cAAA;EAEA,MAAMC,eAAe,GAArB,eAAA;EACA,MAAMC,mBAAmB,GAAzB,aAAA;EACA,MAAMC,oBAAoB,GAA1B,0BAAA;EACA,MAAMC,qBAAqB,GAA3B,2BAAA;EAEA;AACA;AACA;AACA;AACA;;EAEA,MAAA,KAAA,SAAoBC,sBAAAA,CAApB,SAAoBA,CAApB,CAAkC;IAChC7D,WAAW,CAAA,OAAA,EAAA,MAAA,EAAkB;MAC3B,MAAA,OAAA;MAEA,KAAA,OAAA,GAAe,KAAA,UAAA,CAAf,MAAe,CAAf;MACA,KAAA,OAAA,GAAepC,uBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAAA,eAAAA,EAAwC,KAAvD,QAAeA,CAAf;MACA,KAAA,SAAA,GAAiB,KAAjB,mBAAiB,EAAjB;MACA,KAAA,QAAA,GAAA,KAAA;MACA,KAAA,oBAAA,GAAA,KAAA;MACA,KAAA,gBAAA,GAAA,KAAA;MACA,KAAA,UAAA,GAAkB,IAAlB,eAAkB,EAAlB;IAV8B,CAAA,CAAA;;;IAed,WAAPuD,OAAO,GAAG;MACnB,OAAA,OAAA;IACD;;IAEc,WAAJK,IAAI,GAAG;MAChB,OAAA,IAAA;IApB8B,CAAA,CAAA;;;IAyBhCsC,MAAM,CAAA,aAAA,EAAgB;MACpB,OAAO,KAAA,QAAA,GAAgB,KAAhB,IAAgB,EAAhB,GAA8B,KAAA,IAAA,CAArC,aAAqC,CAArC;IACD;;IAEDjC,IAAI,CAAA,aAAA,EAAgB;MAClB,IAAI,KAAA,QAAA,IAAiB,KAArB,gBAAA,EAA4C;QAC1C;MACD;;MAED,MAAMkC,SAAS,GAAG,qBAAA,CAAA,SAAA,CAAA,CAAA,OAAA,CAAqB,KAArB,QAAA,EAAA,UAAA,EAAgD;QAChEC;MADgE,CAAhD,CAAlB;;MAIA,IAAID,SAAS,CAAb,gBAAA,EAAgC;QAC9B;MACD;;MAED,KAAA,QAAA,GAAA,IAAA;;MAEA,IAAI,KAAJ,WAAI,EAAJ,EAAwB;QACtB,KAAA,gBAAA,GAAA,IAAA;MACD;;MAED,KAAA,UAAA,CAAA,IAAA;;MAEA9G,QAAQ,CAARA,IAAAA,CAAAA,SAAAA,CAAAA,GAAAA,CAAAA,eAAAA;;MAEA,KAAA,aAAA;;MAEA,KAAA,eAAA;;MACA,KAAA,eAAA;;MAEAiF,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAgB,KAAhBA,QAAAA,EAAAA,mBAAAA,EAAAA,qBAAAA,EAA2E+B,KAAK,IAAI,KAAA,IAAA,CAApF/B,KAAoF,CAApFA;MAEAA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAgB,KAAhBA,OAAAA,EAAAA,uBAAAA,EAAuD,MAAM;QAC3DA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAiB,KAAjBA,QAAAA,EAAAA,qBAAAA,EAAuD+B,KAAK,IAAI;UAC9D,IAAIA,KAAK,CAALA,MAAAA,KAAiB,KAArB,QAAA,EAAoC;YAClC,KAAA,oBAAA,GAAA,IAAA;UACD;QAHH/B,CAAAA;MADFA,CAAAA;;MAQA,KAAA,aAAA,CAAmB,MAAM,KAAA,YAAA,CAAzB,aAAyB,CAAzB;IACD;;IAED9B,IAAI,CAAA,KAAA,EAAQ;MACV,IAAI6D,KAAK,IAAI,CAAA,GAAA,EAAA,MAAA,EAAA,QAAA,CAAuBA,KAAK,CAALA,MAAAA,CAApC,OAAa,CAAb,EAA2D;QACzDA,KAAK,CAALA,cAAAA;MACD;;MAED,IAAI,CAAC,KAAD,QAAA,IAAkB,KAAtB,gBAAA,EAA6C;QAC3C;MACD;;MAED,MAAMC,SAAS,GAAGhC,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAqB,KAArBA,QAAAA,EAAlB,UAAkBA,CAAlB;;MAEA,IAAIgC,SAAS,CAAb,gBAAA,EAAgC;QAC9B;MACD;;MAED,KAAA,QAAA,GAAA,KAAA;;MACA,MAAM9C,UAAU,GAAG,KAAnB,WAAmB,EAAnB;;MAEA,IAAA,UAAA,EAAgB;QACd,KAAA,gBAAA,GAAA,IAAA;MACD;;MAED,KAAA,eAAA;;MACA,KAAA,eAAA;;MAEAc,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAAAA,aAAAA;;MAEA,KAAA,QAAA,CAAA,SAAA,CAAA,MAAA,CAAA,eAAA;;MAEAA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAiB,KAAjBA,QAAAA,EAAAA,mBAAAA;MACAA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAiB,KAAjBA,OAAAA,EAAAA,uBAAAA;;MAEA,KAAA,cAAA,CAAoB,MAAM,KAA1B,UAA0B,EAA1B,EAA6C,KAA7C,QAAA,EAAA,UAAA;IACD;;IAEDC,OAAO,GAAG;MACR,CAAA,MAAA,EAAS,KAAT,OAAA,EAAA,OAAA,CACWgC,WAAW,IAAIjC,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,WAAAA,EAD1B,SAC0BA,CAD1B;;MAGA,KAAA,SAAA,CAAA,OAAA;;MACA,MAAA,OAAA;MAEA;AACJ;AACA;AACA;AACA;;MACIA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAAAA,aAAAA;IACD;;IAEDkC,YAAY,GAAG;MACb,KAAA,aAAA;IAzH8B,CAAA,CAAA;;;IA8HhCC,mBAAmB,GAAG;MACpB,OAAO,IAAA,QAAA,CAAa;QAClB/F,SAAS,EAAEgG,OAAO,CAAC,KAAA,OAAA,CADD,QACA,CADA;QACyB;QAC3ClD,UAAU,EAAE,KAAA,WAAA;MAFM,CAAb,CAAP;IAID;;IAEDY,UAAU,CAAA,MAAA,EAAS;MACjB7D,MAAM,GAAG,EACP,GADO,OAAA;QAEP,GAAG2C,oBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,iBAAAA,CAA8B,KAF1B,QAEJA,CAFI;QAGP,IAAI,OAAA,MAAA,KAAA,QAAA,GAAA,MAAA,GAAJ,EAAA;MAHO,CAAT3C;MAKAN,eAAe,CAAA,IAAA,EAAA,MAAA,EAAfA,WAAe,CAAfA;MACA,OAAA,MAAA;IACD;;IAED0G,YAAY,CAAA,aAAA,EAAgB;MAC1B,MAAMnD,UAAU,GAAG,KAAnB,WAAmB,EAAnB;;MACA,MAAMoD,SAAS,GAAG5G,uBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAAA,mBAAAA,EAA4C,KAA9D,OAAkBA,CAAlB;;MAEA,IAAI,CAAC,KAAA,QAAA,CAAD,UAAA,IAA6B,KAAA,QAAA,CAAA,UAAA,CAAA,QAAA,KAAsC6G,IAAI,CAA3E,YAAA,EAA0F;QACxF;QACAxH,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAA0B,KAA1BA,QAAAA;MACD;;MAED,KAAA,QAAA,CAAA,KAAA,CAAA,OAAA,GAAA,OAAA;;MACA,KAAA,QAAA,CAAA,eAAA,CAAA,aAAA;;MACA,KAAA,QAAA,CAAA,YAAA,CAAA,YAAA,EAAA,IAAA;;MACA,KAAA,QAAA,CAAA,YAAA,CAAA,MAAA,EAAA,QAAA;;MACA,KAAA,QAAA,CAAA,SAAA,GAAA,CAAA;;MAEA,IAAA,SAAA,EAAe;QACbuH,SAAS,CAATA,SAAAA,GAAAA,CAAAA;MACD;;MAED,IAAA,UAAA,EAAgB;QACdhG,MAAM,CAAC,KAAPA,QAAM,CAANA;MACD;;MAED,KAAA,QAAA,CAAA,SAAA,CAAA,GAAA,CAAA,eAAA;;MAEA,IAAI,KAAA,OAAA,CAAJ,KAAA,EAAwB;QACtB,KAAA,aAAA;MACD;;MAED,MAAMkG,kBAAkB,GAAG,MAAM;QAC/B,IAAI,KAAA,OAAA,CAAJ,KAAA,EAAwB;UACtB,KAAA,QAAA,CAAA,KAAA;QACD;;QAED,KAAA,gBAAA,GAAA,KAAA;QACAxC,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAqB,KAArBA,QAAAA,EAAAA,WAAAA,EAAiD;UAC/C8B;QAD+C,CAAjD9B;MANF,CAAA;;MAWA,KAAA,cAAA,CAAA,kBAAA,EAAwC,KAAxC,OAAA,EAAA,UAAA;IACD;;IAEDyC,aAAa,GAAG;MACdzC,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EADc,aACdA,EADc,CAAA;;MAEdA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAAAA,aAAAA,EAAyC+B,KAAK,IAAI;QAChD,IAAIhH,QAAQ,KAAKgH,KAAK,CAAlBhH,MAAAA,IACA,KAAA,QAAA,KAAkBgH,KAAK,CADvBhH,MAAAA,IAEA,CAAC,KAAA,QAAA,CAAA,QAAA,CAAuBgH,KAAK,CAFjC,MAEK,CAFL,EAE2C;UACzC,KAAA,QAAA,CAAA,KAAA;QACD;MALH/B,CAAAA;IAOD;;IAED0C,eAAe,GAAG;MAChB,IAAI,KAAJ,QAAA,EAAmB;QACjB1C,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAgB,KAAhBA,QAAAA,EAAAA,qBAAAA,EAAsD+B,KAAK,IAAI;UAC7D,IAAI,KAAA,OAAA,CAAA,QAAA,IAAyBA,KAAK,CAALA,GAAAA,KAA7B,UAAA,EAAuD;YACrDA,KAAK,CAALA,cAAAA;YACA,KAAA,IAAA;UAFF,CAAA,MAGO,IAAI,CAAC,KAAA,OAAA,CAAD,QAAA,IAA0BA,KAAK,CAALA,GAAAA,KAA9B,UAAA,EAAwD;YAC7D,KAAA,0BAAA;UACD;QANH/B,CAAAA;MADF,CAAA,MASO;QACLA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAiB,KAAjBA,QAAAA,EAAAA,qBAAAA;MACD;IACF;;IAED2C,eAAe,GAAG;MAChB,IAAI,KAAJ,QAAA,EAAmB;QACjB3C,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAsC,MAAM,KAA5CA,aAA4C,EAA5CA;MADF,CAAA,MAEO;QACLA,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,MAAAA,EAAAA,YAAAA;MACD;IACF;;IAED4C,UAAU,GAAG;MACX,KAAA,QAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;;MACA,KAAA,QAAA,CAAA,YAAA,CAAA,aAAA,EAAA,IAAA;;MACA,KAAA,QAAA,CAAA,eAAA,CAAA,YAAA;;MACA,KAAA,QAAA,CAAA,eAAA,CAAA,MAAA;;MACA,KAAA,gBAAA,GAAA,KAAA;;MACA,KAAA,SAAA,CAAA,IAAA,CAAoB,MAAM;QACxB7H,QAAQ,CAARA,IAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CAAAA,eAAAA;;QACA,KAAA,iBAAA;;QACA,KAAA,UAAA,CAAA,KAAA;;QACAiF,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAqB,KAArBA,QAAAA,EAAAA,YAAAA;MAJF,CAAA;IAMD;;IAED6C,aAAa,CAAA,QAAA,EAAW;MACtB7C,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAgB,KAAhBA,QAAAA,EAAAA,mBAAAA,EAAoD+B,KAAK,IAAI;QAC3D,IAAI,KAAJ,oBAAA,EAA+B;UAC7B,KAAA,oBAAA,GAAA,KAAA;UACA;QACD;;QAED,IAAIA,KAAK,CAALA,MAAAA,KAAiBA,KAAK,CAA1B,aAAA,EAA0C;UACxC;QACD;;QAED,IAAI,KAAA,OAAA,CAAA,QAAA,KAAJ,IAAA,EAAoC;UAClC,KAAA,IAAA;QADF,CAAA,MAEO,IAAI,KAAA,OAAA,CAAA,QAAA,KAAJ,QAAA,EAAwC;UAC7C,KAAA,0BAAA;QACD;MAdH/B,CAAAA;;MAiBA,KAAA,SAAA,CAAA,IAAA,CAAA,QAAA;IACD;;IAED8C,WAAW,GAAG;MACZ,OAAO,KAAA,QAAA,CAAA,SAAA,CAAA,QAAA,CAAP,eAAO,CAAP;IACD;;IAEDC,0BAA0B,GAAG;MAC3B,MAAMf,SAAS,GAAGhC,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CAAqB,KAArBA,QAAAA,EAAlB,oBAAkBA,CAAlB;;MACA,IAAIgC,SAAS,CAAb,gBAAA,EAAgC;QAC9B;MACD;;MAED,MAAM;QAAA,SAAA;QAAA,YAAA;QAA2BgB;MAA3B,IAAqC,KAA3C,QAAA;MACA,MAAMC,kBAAkB,GAAGC,YAAY,GAAGnI,QAAQ,CAARA,eAAAA,CAPf,YAO3B,CAP2B,CAAA;;MAU3B,IAAK,CAAA,kBAAA,IAAuBiI,KAAK,CAALA,SAAAA,KAAxB,QAAC,IAAwDG,SAAS,CAATA,QAAAA,CAA7D,iBAA6DA,CAA7D,EAAoG;QAClG;MACD;;MAED,IAAI,CAAJ,kBAAA,EAAyB;QACvBH,KAAK,CAALA,SAAAA,GAAAA,QAAAA;MACD;;MAEDG,SAAS,CAATA,GAAAA,CAAAA,iBAAAA;;MACA,KAAA,cAAA,CAAoB,MAAM;QACxBA,SAAS,CAATA,MAAAA,CAAAA,iBAAAA;;QACA,IAAI,CAAJ,kBAAA,EAAyB;UACvB,KAAA,cAAA,CAAoB,MAAM;YACxBH,KAAK,CAALA,SAAAA,GAAAA,EAAAA;UADF,CAAA,EAEG,KAFH,OAAA;QAGD;MANH,CAAA,EAOG,KAPH,OAAA;;MASA,KAAA,QAAA,CAAA,KAAA;IA/R8B,CAAA,CAAA;IAmShC;IACA;;;IAEAI,aAAa,GAAG;MACd,MAAMH,kBAAkB,GAAG,KAAA,QAAA,CAAA,YAAA,GAA6BlI,QAAQ,CAARA,eAAAA,CAAxD,YAAA;;MACA,MAAMwD,cAAc,GAAG,KAAA,UAAA,CAAvB,QAAuB,EAAvB;;MACA,MAAM8E,iBAAiB,GAAG9E,cAAc,GAAxC,CAAA;;MAEA,IAAK,CAAA,iBAAA,IAAA,kBAAA,IAA4C,CAAC3B,KAA9C,EAAC,IAA0DyG,iBAAiB,IAAI,CAArBA,kBAAAA,IAA4CzG,KAA3G,EAAA,EAAqH;QACnH,KAAA,QAAA,CAAA,KAAA,CAAA,WAAA,GAAmC,GAAE2B,cAArC,IAAA;MACD;;MAED,IAAK8E,iBAAiB,IAAI,CAArBA,kBAAAA,IAA4C,CAACzG,KAA9C,EAACyG,IAA0D,CAAA,iBAAA,IAAA,kBAAA,IAA4CzG,KAA3G,EAAA,EAAqH;QACnH,KAAA,QAAA,CAAA,KAAA,CAAA,YAAA,GAAoC,GAAE2B,cAAtC,IAAA;MACD;IACF;;IAED+E,iBAAiB,GAAG;MAClB,KAAA,QAAA,CAAA,KAAA,CAAA,WAAA,GAAA,EAAA;MACA,KAAA,QAAA,CAAA,KAAA,CAAA,YAAA,GAAA,EAAA;IAtT8B,CAAA,CAAA;;;IA2TV,OAAfC,eAAe,CAAA,MAAA,EAAA,aAAA,EAAwB;MAC5C,OAAO,KAAA,IAAA,CAAU,YAAY;QAC3B,MAAMC,IAAI,GAAGC,KAAK,CAALA,mBAAAA,CAAAA,IAAAA,EAAb,MAAaA,CAAb;;QAEA,IAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;UAC9B;QACD;;QAED,IAAI,OAAOD,IAAI,CAAX,MAAW,CAAX,KAAJ,WAAA,EAAyC;UACvC,MAAM,IAAA,SAAA,CAAe,oBAAmBvH,MAAxC,GAAM,CAAN;QACD;;QAEDuH,IAAI,CAAJA,MAAI,CAAJA,CAAAA,aAAAA;MAXF,CAAO,CAAP;IAaD;;EAzU+B;EA4UlC;AACA;AACA;AACA;AACA;;;EAEAxD,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAAAA,oBAAAA,EAAAA,oBAAAA,EAAsE,UAAA,KAAA,EAAiB;IACrF,MAAMvC,MAAM,GAAG3C,sBAAsB,CAArC,IAAqC,CAArC;;IAEA,IAAI,CAAA,GAAA,EAAA,MAAA,EAAA,QAAA,CAAuB,KAA3B,OAAI,CAAJ,EAA0C;MACxCiH,KAAK,CAALA,cAAAA;IACD;;IAED/B,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAqC6B,SAAS,IAAI;MAChD,IAAIA,SAAS,CAAb,gBAAA,EAAgC;QAC9B;QACA;MACD;;MAED7B,qBAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAuC,MAAM;QAC3C,IAAI5D,SAAS,CAAb,IAAa,CAAb,EAAqB;UACnB,KAAA,KAAA;QACD;MAHH4D,CAAAA;IANFA,CAAAA;IAaA,MAAMwD,IAAI,GAAGC,KAAK,CAALA,mBAAAA,CAAb,MAAaA,CAAb;IAEAD,IAAI,CAAJA,MAAAA,CAAAA,IAAAA;EAtBFxD,CAAAA;EAyBA;AACA;AACA;AACA;AACA;AACA;;EAEAnD,kBAAkB,CAAlBA,KAAkB,CAAlBA","sourcesContent":["import SelectorEngine from '../dom/selector-engine'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = obj => {\n  if (obj === null || obj === undefined) {\n    return `${obj}`\n  }\n\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttr = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttr || (!hrefAttr.includes('#') && !hrefAttr.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n      hrefAttr = `#${hrefAttr.split('#')[1]}`\n    }\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = obj => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  if (typeof obj.jquery !== 'undefined') {\n    obj = obj[0]\n  }\n\n  return typeof obj.nodeType !== 'undefined'\n}\n\nconst getElement = obj => {\n  if (isElement(obj)) { // it's a jQuery object or a node element\n    return obj.jquery ? obj[0] : obj\n  }\n\n  if (typeof obj === 'string' && obj.length > 0) {\n    return SelectorEngine.findOne(obj)\n  }\n\n  return null\n}\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes).forEach(property => {\n    const expectedTypes = configTypes[property]\n    const value = config[property]\n    const valueType = value && isElement(value) ? 'element' : toType(value)\n\n    if (!new RegExp(expectedTypes).test(valueType)) {\n      throw new TypeError(\n        `${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n      )\n    }\n  })\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  return getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\nconst reflow = element => element.offsetHeight\n\nconst getjQuery = () => {\n  const { jQuery } = window\n\n  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        DOMContentLoadedCallbacks.forEach(callback => callback())\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = callback => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return list[!shouldGetNext && isCycleAllowed ? list.length - 1 : 0]\n  }\n\n  const listLength = list.length\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  getElement,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  typeCheckConfig,\n  isVisible,\n  isDisabled,\n  findShadowRoot,\n  noop,\n  getNextActiveElement,\n  reflow,\n  getjQuery,\n  onDOMContentLoaded,\n  isRTL,\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine'\nimport Manipulator from '../dom/manipulator'\nimport { isElement } from './index'\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, 'paddingRight', calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - width)\n  }\n\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProp, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProp)\n      const calculatedValue = window.getComputedStyle(element)[styleProp]\n      element.style[styleProp] = `${callback(Number.parseFloat(calculatedValue))}px`\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight')\n  }\n\n  _saveInitialAttribute(element, styleProp) {\n    const actualValue = element.style[styleProp]\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProp, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProp) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProp)\n      if (typeof value === 'undefined') {\n        element.style.removeProperty(styleProp)\n      } else {\n        Manipulator.removeDataAttribute(element, styleProp)\n        element.style[styleProp] = value\n      }\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n    } else {\n      SelectorEngine.find(selector, this._element).forEach(callBack)\n    }\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n}\n\nexport default ScrollBarHelper\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport { execute, executeAfterTransition, getElement, reflow, typeCheckConfig } from './index'\n\nconst Default = {\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  isAnimated: false,\n  rootElement: 'body', // give the choice to place backdrop under different elements\n  clickCallback: null\n}\n\nconst DefaultType = {\n  isVisible: 'boolean',\n  isAnimated: 'boolean',\n  rootElement: '(element|string)',\n  clickCallback: '(function|null)'\n}\nconst NAME = 'backdrop'\nconst CLASS_NAME_BACKDROP = 'modal-backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nclass Backdrop {\n  constructor(config) {\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._append()\n\n    if (this._config.isAnimated) {\n      reflow(this._getElement())\n    }\n\n    this._getElement().classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      execute(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      execute(callback)\n    })\n  }\n\n  // Private\n\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = CLASS_NAME_BACKDROP\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...(typeof config === 'object' ? config : {})\n    }\n\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement)\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    this._config.rootElement.appendChild(this._getElement())\n\n    EventHandler.on(this._getElement(), EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    EventHandler.off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\nexport default Backdrop\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport ScrollBarHelper from './util/scrollbar'\nimport BaseComponent from './base-component'\nimport Backdrop from './util/backdrop'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  focus: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  focus: 'boolean'\n}\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\nconst SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"modal\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._config = this._getConfig(config)\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._isShown = false\n    this._ignoreBackdropClick = false\n    this._isTransitioning = false\n    this._scrollBar = new ScrollBarHelper()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n\n    if (this._isAnimated()) {\n      this._isTransitioning = true\n    }\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, event => this.hide(event))\n\n    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n        if (event.target === this._element) {\n          this._ignoreBackdropClick = true\n        }\n      })\n    })\n\n    this._showBackdrop(() => this._showElement(relatedTarget))\n  }\n\n  hide(event) {\n    if (event && ['A', 'AREA'].includes(event.target.tagName)) {\n      event.preventDefault()\n    }\n\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    const isAnimated = this._isAnimated()\n\n    if (isAnimated) {\n      this._isTransitioning = true\n    }\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.off(document, EVENT_FOCUSIN)\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    EventHandler.off(this._element, EVENT_CLICK_DISMISS)\n    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS)\n\n    this._queueCallback(() => this._hideModal(), this._element, isAnimated)\n  }\n\n  dispose() {\n    [window, this._dialog]\n      .forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY))\n\n    this._backdrop.dispose()\n    super.dispose()\n\n    /**\n     * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n     * Do not move `document` in `htmlElements` array\n     * It will remove `EVENT_CLICK_DATA_API` event that should remain\n     */\n    EventHandler.off(document, EVENT_FOCUSIN)\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _showElement(relatedTarget) {\n    const isAnimated = this._isAnimated()\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog)\n\n    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // Don't move modal's DOM position\n      document.body.appendChild(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    if (isAnimated) {\n      reflow(this._element)\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    if (this._config.focus) {\n      this._enforceFocus()\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.focus()\n      }\n\n      this._isTransitioning = false\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, isAnimated)\n  }\n\n  _enforceFocus() {\n    EventHandler.off(document, EVENT_FOCUSIN) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => {\n      if (document !== event.target &&\n          this._element !== event.target &&\n          !this._element.contains(event.target)) {\n        this._element.focus()\n      }\n    })\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown) {\n      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (this._config.keyboard && event.key === ESCAPE_KEY) {\n          event.preventDefault()\n          this.hide()\n        } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n          this._triggerBackdropTransition()\n        }\n      })\n    } else {\n      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS)\n    }\n  }\n\n  _setResizeEvent() {\n    if (this._isShown) {\n      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog())\n    } else {\n      EventHandler.off(window, EVENT_RESIZE)\n    }\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _showBackdrop(callback) {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {\n      if (this._ignoreBackdropClick) {\n        this._ignoreBackdropClick = false\n        return\n      }\n\n      if (event.target !== event.currentTarget) {\n        return\n      }\n\n      if (this._config.backdrop === true) {\n        this.hide()\n      } else if (this._config.backdrop === 'static') {\n        this._triggerBackdropTransition()\n      }\n    })\n\n    this._backdrop.show(callback)\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const { classList, scrollHeight, style } = this._element\n    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight\n\n    // return if the following background transition hasn't yet completed\n    if ((!isModalOverflowing && style.overflowY === 'hidden') || classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      style.overflowY = 'hidden'\n    }\n\n    classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      classList.remove(CLASS_NAME_STATIC)\n      if (!isModalOverflowing) {\n        this._queueCallback(() => {\n          style.overflowY = ''\n        }, this._dialog)\n      }\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // ----------------------------------------------------------------------\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if ((!isBodyOverflowing && isModalOverflowing && !isRTL()) || (isBodyOverflowing && !isModalOverflowing && isRTL())) {\n      this._element.style.paddingLeft = `${scrollbarWidth}px`\n    }\n\n    if ((isBodyOverflowing && !isModalOverflowing && !isRTL()) || (!isBodyOverflowing && isModalOverflowing && isRTL())) {\n      this._element.style.paddingRight = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Modal to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Modal)\n\nexport default Modal\n"]},"metadata":{},"sourceType":"script"}