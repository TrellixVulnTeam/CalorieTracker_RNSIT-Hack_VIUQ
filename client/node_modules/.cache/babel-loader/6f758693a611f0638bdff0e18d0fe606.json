{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'; // import setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware))); // set up a store subscription listener\n// to store the users token in localStorage\n// initialize current state from redux store for subscription comparison\n// preventing undefined error\n\nlet currentState = store.getState();\nstore.subscribe(() => {\n  // keep track of the previous and current state to compare changes\n  // eslint-ignore-next-line\n  // eslint-disable-next-line no-unused-vars\n  let previousState = currentState;\n  currentState = store.getState(); // if the token changes set the value in localStorage and axios headers\n  // if (previousState.auth.token !== currentState.auth.token) {\n  //   const token = currentState.auth.token;\n  //   setAuthToken(token);\n  // }\n});\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","store","currentState","getState","subscribe","previousState"],"sources":["C:/Users/Admin/OneDrive/Desktop/CalFit/calfit-mern-app/client/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n// import setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  // eslint-ignore-next-line\r\n  // eslint-disable-next-line no-unused-vars\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  // if (previousState.auth.token !== currentState.auth.token) {\r\n  //   const token = currentState.auth.token;\r\n  //   setAuthToken(token);\r\n  // }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,MAAMI,KAAK,GAAGP,WAAW,CACvBI,WADuB,EAEvBC,YAFuB,EAGvBH,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAHI,CAAzB,C,CAMA;AACA;AAEA;AACA;;AACA,IAAIE,YAAY,GAAGD,KAAK,CAACE,QAAN,EAAnB;AAEAF,KAAK,CAACG,SAAN,CAAgB,MAAM;EACpB;EACA;EACA;EACA,IAAIC,aAAa,GAAGH,YAApB;EACAA,YAAY,GAAGD,KAAK,CAACE,QAAN,EAAf,CALoB,CAMpB;EACA;EACA;EACA;EACA;AACD,CAXD;AAaA,eAAeF,KAAf"},"metadata":{},"sourceType":"module"}