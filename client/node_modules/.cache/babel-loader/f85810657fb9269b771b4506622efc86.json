{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\CalFit\\\\calfit-mern-app\\\\client\\\\src\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport axios from 'axios';\nimport { WEBSITE_NAME } from 'src/utils/brand';\nimport TextInput from 'src/components/forms/TextInput';\nimport AsyncButton from 'src/components/buttons/AsyncButton';\nimport { loadUser } from 'src/actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = _ref => {\n  _s();\n\n  let {\n    user,\n    loadUser\n  } = _ref;\n  // We use this ref so we can clear the success message's timeout on component unmounting\n  const messageTimerRef = useRef(null);\n  const [state, setState] = useState({\n    username: (user === null || user === void 0 ? void 0 : user.username) || '',\n    email: (user === null || user === void 0 ? void 0 : user.email) || '',\n    password: '',\n    confirmPassword: '',\n    oldPassword: '',\n    loading: false,\n    successMessage: '',\n    errors: []\n  });\n  useEffect(() => {\n    // Clearning the timeout\n    return () => {\n      if (messageTimerRef.current) {\n        clearTimeout(messageTimerRef.current);\n      }\n    };\n  }, []);\n\n  const handleOnChange = async e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSaveSettings = async e => {\n    e.preventDefault();\n    setState({ ...state,\n      successMessage: '',\n      errors: [],\n      loading: true\n    });\n    const {\n      username,\n      email,\n      password,\n      confirmPassword,\n      oldPassword\n    } = state;\n\n    if (password !== confirmPassword) {\n      setState(prevState => ({ ...prevState,\n        errors: [{\n          param: 'confirmPassword',\n          msg: 'Passwords do not match'\n        }],\n        loading: false\n      }));\n      return;\n    }\n\n    const formData = {\n      username,\n      email,\n      password,\n      oldPassword\n    };\n\n    try {\n      const res = await axios.put('auth/self', formData);\n      setState(prevState => ({ ...prevState,\n        successMessage: res.data,\n        loading: false\n      })); // We load the user so we get the updated data\n\n      loadUser(); // We also hide the success message after few seconds\n\n      messageTimerRef.current = setTimeout(() => {\n        setState(prevState => ({ ...prevState,\n          successMessage: ''\n        }));\n      }, 6 * 1000);\n    } catch (error) {\n      const {\n        response: {\n          data: {\n            errors\n          }\n        }\n      } = error;\n      setState(prevState => ({ ...prevState,\n        errors,\n        loading: false\n      }));\n    }\n  };\n\n  const {\n    username,\n    email,\n    password,\n    confirmPassword,\n    oldPassword,\n    loading,\n    successMessage,\n    errors\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: `${WEBSITE_NAME} - Settings`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-signin\",\n      onSubmit: handleSaveSettings,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title h3 mb-5 font-weight-normal\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"username\",\n        value: username,\n        label: \"Username\",\n        type: \"text\",\n        required: true,\n        errors: errors,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"email\",\n        value: email,\n        label: \"Email*\",\n        type: \"email\",\n        required: true,\n        errors: errors,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If you do not want to change your password, leave it empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"oldPassword\",\n        value: oldPassword,\n        label: \"Old Password\",\n        type: \"password\",\n        required: confirmPassword || password,\n        errors: errors,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"password\",\n        value: password,\n        label: \"New Password\",\n        type: \"password\",\n        required: confirmPassword || oldPassword,\n        errors: errors,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        label: \"Confirm Password\",\n        type: \"password\",\n        required: confirmPassword || password,\n        errors: errors,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AsyncButton, {\n        type: \"submit\",\n        text: \"Save\",\n        className: \"primary-button btn-lg rounded-pill mt-4 py-2 px-4\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"9aJxYzHRm/StWzSv3k9SZWnbscY=\");\n\n_c = Settings;\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nSettings.propTypes = {\n  user: PropTypes.object.isRequired,\n  loadUser: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  loadUser\n})(Settings);\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PropTypes","connect","Helmet","axios","WEBSITE_NAME","TextInput","AsyncButton","loadUser","Settings","user","messageTimerRef","state","setState","username","email","password","confirmPassword","oldPassword","loading","successMessage","errors","current","clearTimeout","handleOnChange","e","target","name","value","handleSaveSettings","preventDefault","prevState","param","msg","formData","res","put","data","setTimeout","error","response","mapStateToProps","auth","propTypes","object","isRequired","func"],"sources":["C:/Users/Admin/OneDrive/Desktop/CalFit/calfit-mern-app/client/src/pages/Settings.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport axios from 'axios';\r\n\r\nimport { WEBSITE_NAME } from 'src/utils/brand';\r\nimport TextInput from 'src/components/forms/TextInput';\r\n\r\nimport AsyncButton from 'src/components/buttons/AsyncButton';\r\nimport { loadUser } from 'src/actions/auth';\r\n\r\nconst Settings = ({ user, loadUser }) => {\r\n  // We use this ref so we can clear the success message's timeout on component unmounting\r\n  const messageTimerRef = useRef(null);\r\n\r\n  const [state, setState] = useState({\r\n    username: user?.username || '',\r\n    email: user?.email || '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    oldPassword: '',\r\n    loading: false,\r\n    successMessage: '',\r\n    errors: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Clearning the timeout\r\n    return () => {\r\n      if (messageTimerRef.current) {\r\n        clearTimeout(messageTimerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleOnChange = async (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveSettings = async (e) => {\r\n    e.preventDefault();\r\n    setState({ ...state, successMessage: '', errors: [], loading: true });\r\n\r\n    const { username, email, password, confirmPassword, oldPassword } = state;\r\n\r\n    if (password !== confirmPassword) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        errors: [{ param: 'confirmPassword', msg: 'Passwords do not match' }],\r\n        loading: false,\r\n      }));\r\n\r\n      return;\r\n    }\r\n\r\n    const formData = { username, email, password, oldPassword };\r\n\r\n    try {\r\n      const res = await axios.put('auth/self', formData);\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        successMessage: res.data,\r\n        loading: false,\r\n      }));\r\n\r\n      // We load the user so we get the updated data\r\n      loadUser();\r\n\r\n      // We also hide the success message after few seconds\r\n      messageTimerRef.current = setTimeout(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          successMessage: '',\r\n        }));\r\n      }, 6 * 1000);\r\n    } catch (error) {\r\n      const {\r\n        response: {\r\n          data: { errors },\r\n        },\r\n      } = error;\r\n      setState((prevState) => ({ ...prevState, errors, loading: false }));\r\n    }\r\n  };\r\n\r\n  const {\r\n    username,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n    oldPassword,\r\n    loading,\r\n    successMessage,\r\n    errors,\r\n  } = state;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${WEBSITE_NAME} - Settings`}</title>\r\n      </Helmet>\r\n      <form className=\"form-signin\" onSubmit={handleSaveSettings}>\r\n        <h1 className=\"form-title h3 mb-5 font-weight-normal\">Settings</h1>\r\n        <TextInput\r\n          name=\"username\"\r\n          value={username}\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          required\r\n          errors={errors}\r\n          onChange={handleOnChange}\r\n        />\r\n        <TextInput\r\n          name=\"email\"\r\n          value={email}\r\n          label=\"Email*\"\r\n          type=\"email\"\r\n          required\r\n          errors={errors}\r\n          onChange={handleOnChange}\r\n        />\r\n        <p>If you do not want to change your password, leave it empty</p>\r\n        <TextInput\r\n          name=\"oldPassword\"\r\n          value={oldPassword}\r\n          label=\"Old Password\"\r\n          type=\"password\"\r\n          required={confirmPassword || password}\r\n          errors={errors}\r\n          onChange={handleOnChange}\r\n        />\r\n        <TextInput\r\n          name=\"password\"\r\n          value={password}\r\n          label=\"New Password\"\r\n          type=\"password\"\r\n          required={confirmPassword || oldPassword}\r\n          errors={errors}\r\n          onChange={handleOnChange}\r\n        />\r\n        <TextInput\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          required={confirmPassword || password}\r\n          errors={errors}\r\n          onChange={handleOnChange}\r\n        />\r\n\r\n        {successMessage && (\r\n          <div className=\"alert alert-success\" role=\"alert\">\r\n            {successMessage}\r\n          </div>\r\n        )}\r\n        <AsyncButton\r\n          type=\"submit\"\r\n          text=\"Save\"\r\n          className=\"primary-button btn-lg rounded-pill mt-4 py-2 px-4\"\r\n          loading={loading}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n});\r\n\r\nSettings.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  loadUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { loadUser })(Settings);\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AAEA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;;AAEA,MAAMC,QAAQ,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,IAAF;IAAQF;EAAR,CAAuB;EACvC;EACA,MAAMG,eAAe,GAAGZ,MAAM,CAAC,IAAD,CAA9B;EAEA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;IACjCgB,QAAQ,EAAE,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,QAAN,KAAkB,EADK;IAEjCC,KAAK,EAAE,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,KAAN,KAAe,EAFW;IAGjCC,QAAQ,EAAE,EAHuB;IAIjCC,eAAe,EAAE,EAJgB;IAKjCC,WAAW,EAAE,EALoB;IAMjCC,OAAO,EAAE,KANwB;IAOjCC,cAAc,EAAE,EAPiB;IAQjCC,MAAM,EAAE;EARyB,CAAD,CAAlC;EAWArB,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM;MACX,IAAIW,eAAe,CAACW,OAApB,EAA6B;QAC3BC,YAAY,CAACZ,eAAe,CAACW,OAAjB,CAAZ;MACD;IACF,CAJD;EAKD,CAPQ,EAON,EAPM,CAAT;;EASA,MAAME,cAAc,GAAG,MAAOC,CAAP,IAAa;IAClCZ,QAAQ,CAAC,EAAE,GAAGD,KAAL;MAAY,CAACa,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;IAAtC,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,kBAAkB,GAAG,MAAOJ,CAAP,IAAa;IACtCA,CAAC,CAACK,cAAF;IACAjB,QAAQ,CAAC,EAAE,GAAGD,KAAL;MAAYQ,cAAc,EAAE,EAA5B;MAAgCC,MAAM,EAAE,EAAxC;MAA4CF,OAAO,EAAE;IAArD,CAAD,CAAR;IAEA,MAAM;MAAEL,QAAF;MAAYC,KAAZ;MAAmBC,QAAnB;MAA6BC,eAA7B;MAA8CC;IAA9C,IAA8DN,KAApE;;IAEA,IAAII,QAAQ,KAAKC,eAAjB,EAAkC;MAChCJ,QAAQ,CAAEkB,SAAD,KAAgB,EACvB,GAAGA,SADoB;QAEvBV,MAAM,EAAE,CAAC;UAAEW,KAAK,EAAE,iBAAT;UAA4BC,GAAG,EAAE;QAAjC,CAAD,CAFe;QAGvBd,OAAO,EAAE;MAHc,CAAhB,CAAD,CAAR;MAMA;IACD;;IAED,MAAMe,QAAQ,GAAG;MAAEpB,QAAF;MAAYC,KAAZ;MAAmBC,QAAnB;MAA6BE;IAA7B,CAAjB;;IAEA,IAAI;MACF,MAAMiB,GAAG,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAU,WAAV,EAAuBF,QAAvB,CAAlB;MAEArB,QAAQ,CAAEkB,SAAD,KAAgB,EACvB,GAAGA,SADoB;QAEvBX,cAAc,EAAEe,GAAG,CAACE,IAFG;QAGvBlB,OAAO,EAAE;MAHc,CAAhB,CAAD,CAAR,CAHE,CASF;;MACAX,QAAQ,GAVN,CAYF;;MACAG,eAAe,CAACW,OAAhB,GAA0BgB,UAAU,CAAC,MAAM;QACzCzB,QAAQ,CAAEkB,SAAD,KAAgB,EACvB,GAAGA,SADoB;UAEvBX,cAAc,EAAE;QAFO,CAAhB,CAAD,CAAR;MAID,CALmC,EAKjC,IAAI,IAL6B,CAApC;IAMD,CAnBD,CAmBE,OAAOmB,KAAP,EAAc;MACd,MAAM;QACJC,QAAQ,EAAE;UACRH,IAAI,EAAE;YAAEhB;UAAF;QADE;MADN,IAIFkB,KAJJ;MAKA1B,QAAQ,CAAEkB,SAAD,KAAgB,EAAE,GAAGA,SAAL;QAAgBV,MAAhB;QAAwBF,OAAO,EAAE;MAAjC,CAAhB,CAAD,CAAR;IACD;EACF,CA7CD;;EA+CA,MAAM;IACJL,QADI;IAEJC,KAFI;IAGJC,QAHI;IAIJC,eAJI;IAKJC,WALI;IAMJC,OANI;IAOJC,cAPI;IAQJC;EARI,IASFT,KATJ;EAWA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA,uBACE;QAAA,UAAS,GAAEP,YAAa;MAAxB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAM,SAAS,EAAC,aAAhB;MAA8B,QAAQ,EAAEwB,kBAAxC;MAAA,wBACE;QAAI,SAAS,EAAC,uCAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,SAAD;QACE,IAAI,EAAC,UADP;QAEE,KAAK,EAAEf,QAFT;QAGE,KAAK,EAAC,UAHR;QAIE,IAAI,EAAC,MAJP;QAKE,QAAQ,MALV;QAME,MAAM,EAAEO,MANV;QAOE,QAAQ,EAAEG;MAPZ;QAAA;QAAA;QAAA;MAAA,QAFF,eAWE,QAAC,SAAD;QACE,IAAI,EAAC,OADP;QAEE,KAAK,EAAET,KAFT;QAGE,KAAK,EAAC,QAHR;QAIE,IAAI,EAAC,OAJP;QAKE,QAAQ,MALV;QAME,MAAM,EAAEM,MANV;QAOE,QAAQ,EAAEG;MAPZ;QAAA;QAAA;QAAA;MAAA,QAXF,eAoBE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApBF,eAqBE,QAAC,SAAD;QACE,IAAI,EAAC,aADP;QAEE,KAAK,EAAEN,WAFT;QAGE,KAAK,EAAC,cAHR;QAIE,IAAI,EAAC,UAJP;QAKE,QAAQ,EAAED,eAAe,IAAID,QAL/B;QAME,MAAM,EAAEK,MANV;QAOE,QAAQ,EAAEG;MAPZ;QAAA;QAAA;QAAA;MAAA,QArBF,eA8BE,QAAC,SAAD;QACE,IAAI,EAAC,UADP;QAEE,KAAK,EAAER,QAFT;QAGE,KAAK,EAAC,cAHR;QAIE,IAAI,EAAC,UAJP;QAKE,QAAQ,EAAEC,eAAe,IAAIC,WAL/B;QAME,MAAM,EAAEG,MANV;QAOE,QAAQ,EAAEG;MAPZ;QAAA;QAAA;QAAA;MAAA,QA9BF,eAuCE,QAAC,SAAD;QACE,IAAI,EAAC,iBADP;QAEE,KAAK,EAAEP,eAFT;QAGE,KAAK,EAAC,kBAHR;QAIE,IAAI,EAAC,UAJP;QAKE,QAAQ,EAAEA,eAAe,IAAID,QAL/B;QAME,MAAM,EAAEK,MANV;QAOE,QAAQ,EAAEG;MAPZ;QAAA;QAAA;QAAA;MAAA,QAvCF,EAiDGJ,cAAc,iBACb;QAAK,SAAS,EAAC,qBAAf;QAAqC,IAAI,EAAC,OAA1C;QAAA,UACGA;MADH;QAAA;QAAA;QAAA;MAAA,QAlDJ,eAsDE,QAAC,WAAD;QACE,IAAI,EAAC,QADP;QAEE,IAAI,EAAC,MAFP;QAGE,SAAS,EAAC,mDAHZ;QAIE,OAAO,EAAED;MAJX;QAAA;QAAA;QAAA;MAAA,QAtDF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAoED,CA1JD;;GAAMV,Q;;KAAAA,Q;;AA4JN,MAAMgC,eAAe,GAAI7B,KAAD,KAAY;EAClCF,IAAI,EAAEE,KAAK,CAAC8B,IAAN,CAAWhC;AADiB,CAAZ,CAAxB;;AAIAD,QAAQ,CAACkC,SAAT,GAAqB;EACnBjC,IAAI,EAAET,SAAS,CAAC2C,MAAV,CAAiBC,UADJ;EAEnBrC,QAAQ,EAAEP,SAAS,CAAC6C,IAAV,CAAeD;AAFN,CAArB;AAKA,eAAe3C,OAAO,CAACuC,eAAD,EAAkB;EAAEjC;AAAF,CAAlB,CAAP,CAAuCC,QAAvC,CAAf"},"metadata":{},"sourceType":"module"}