{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\CalFit\\\\client\\\\src\\\\components\\\\forms\\\\FileInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileInput = _ref => {\n  let {\n    name,\n    className,\n    label,\n    errors,\n    handleChange,\n    reference,\n    ...rest\n  } = _ref;\n  const error = errors.find(error => error.param === name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-start\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: \"form-label mb-0 mt-1\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `form-control mt-2${error ? ` is-invalid` : ''} ${className}`,\n      type: \"file\",\n      id: name,\n      onChange: e => handleChange(e.target.files[0]),\n      ref: reference,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error === null || error === void 0 ? void 0 : error.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FileInput;\nFileInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  reference: PropTypes.object,\n  // The reference is used so we can empty the file input value\n  errors: PropTypes.array,\n  rest: PropTypes.any\n};\nFileInput.defaultProps = {\n  className: '',\n  errors: []\n};\nexport default FileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"names":["React","PropTypes","FileInput","name","className","label","errors","handleChange","reference","rest","error","find","param","e","target","files","msg","propTypes","string","isRequired","func","object","array","any","defaultProps"],"sources":["C:/Users/Admin/OneDrive/Desktop/CalFit/client/src/components/forms/FileInput.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FileInput = ({\r\n  name,\r\n  className,\r\n  label,\r\n  errors,\r\n  handleChange,\r\n  reference,\r\n  ...rest\r\n}) => {\r\n  const error = errors.find((error) => error.param === name);\r\n  return (\r\n    <div className=\"text-start\">\r\n      {label && (\r\n        <label htmlFor={name} className=\"form-label mb-0 mt-1\">\r\n          {label}\r\n        </label>\r\n      )}\r\n      <input\r\n        className={`form-control mt-2${\r\n          error ? ` is-invalid` : ''\r\n        } ${className}`}\r\n        type=\"file\"\r\n        id={name}\r\n        onChange={(e) => handleChange(e.target.files[0])}\r\n        ref={reference}\r\n        {...rest}\r\n      />\r\n      <div className=\"invalid-feedback\">{error?.msg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFileInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  label: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired,\r\n  reference: PropTypes.object, // The reference is used so we can empty the file input value\r\n  errors: PropTypes.array,\r\n  rest: PropTypes.any,\r\n};\r\n\r\nFileInput.defaultProps = {\r\n  className: '',\r\n  errors: [],\r\n};\r\n\r\nexport default FileInput;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,QAQZ;EAAA,IARa;IACjBC,IADiB;IAEjBC,SAFiB;IAGjBC,KAHiB;IAIjBC,MAJiB;IAKjBC,YALiB;IAMjBC,SANiB;IAOjB,GAAGC;EAPc,CAQb;EACJ,MAAMC,KAAK,GAAGJ,MAAM,CAACK,IAAP,CAAaD,KAAD,IAAWA,KAAK,CAACE,KAAN,KAAgBT,IAAvC,CAAd;EACA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,WACGE,KAAK,iBACJ;MAAO,OAAO,EAAEF,IAAhB;MAAsB,SAAS,EAAC,sBAAhC;MAAA,UACGE;IADH;MAAA;MAAA;MAAA;IAAA,QAFJ,eAME;MACE,SAAS,EAAG,oBACVK,KAAK,GAAI,aAAJ,GAAmB,EACzB,IAAGN,SAAU,EAHhB;MAIE,IAAI,EAAC,MAJP;MAKE,EAAE,EAAED,IALN;MAME,QAAQ,EAAGU,CAAD,IAAON,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAN/B;MAOE,GAAG,EAAEP,SAPP;MAAA,GAQMC;IARN;MAAA;MAAA;MAAA;IAAA,QANF,eAgBE;MAAK,SAAS,EAAC,kBAAf;MAAA,UAAmCC,KAAnC,aAAmCA,KAAnC,uBAAmCA,KAAK,CAAEM;IAA1C;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA9BD;;KAAMd,S;AAgCNA,SAAS,CAACe,SAAV,GAAsB;EACpBd,IAAI,EAAEF,SAAS,CAACiB,MAAV,CAAiBC,UADH;EAEpBf,SAAS,EAAEH,SAAS,CAACiB,MAFD;EAGpBb,KAAK,EAAEJ,SAAS,CAACiB,MAHG;EAIpBX,YAAY,EAAEN,SAAS,CAACmB,IAAV,CAAeD,UAJT;EAKpBX,SAAS,EAAEP,SAAS,CAACoB,MALD;EAKS;EAC7Bf,MAAM,EAAEL,SAAS,CAACqB,KANE;EAOpBb,IAAI,EAAER,SAAS,CAACsB;AAPI,CAAtB;AAUArB,SAAS,CAACsB,YAAV,GAAyB;EACvBpB,SAAS,EAAE,EADY;EAEvBE,MAAM,EAAE;AAFe,CAAzB;AAKA,eAAeJ,SAAf"},"metadata":{},"sourceType":"module"}